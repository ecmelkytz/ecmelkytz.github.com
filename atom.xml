<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ecmel Kaytazoğlu]]></title>
  <link href="http://ecmelkytz.github.com/atom.xml" rel="self"/>
  <link href="http://ecmelkytz.github.com/"/>
  <updated>2016-03-15T16:34:19+02:00</updated>
  <id>http://ecmelkytz.github.com/</id>
  <author>
    <name><![CDATA[Ecmel Kaytazoğlu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails: ActiveRecord Enum Kullanımı]]></title>
    <link href="http://ecmelkytz.github.com/blog/2016/03/10/rails-activerecord-enum-kullanimi/"/>
    <updated>2016-03-10T14:00:01+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2016/03/10/rails-activerecord-enum-kullanimi</id>
    <content type="html"><![CDATA[<p>Rails 4.1 ile gelen enum özelliğini örnek senaryolar üzerinden açıklamaya çalışacağım.</p>

<p>Şimdi Car adında bir modelimiz olsun ve biz  aracın  kiralanmış (rented), kullanıma uygun (suitable_for_use) veya kullanım dışı (out_of_use) olması gibi bilgilerini tutmak isteyelim.</p>

<h5>Birden fazla kolon mu kullanalım? Neden?</h5>

<p>Aşağıdaki gibi tablomuza bu alanları eklediğimizi düşünelim.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">AddStatusesToCars</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:cars</span><span class="p">,</span> <span class="ss">:suitable_for_use?</span><span class="p">,</span> <span class="ss">:boolean</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:cars</span><span class="p">,</span> <span class="ss">:rented</span><span class="p">,</span> <span class="ss">:boolean</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:cars</span><span class="p">,</span> <span class="ss">:out_of_use?</span><span class="p">,</span> <span class="ss">:boolean</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu senaryoya göre araç ya kiralanmıştır ya kullanılabilir durumdadır ya da kullanım dışıdır. Bunlardan herhangi birini true yaptığımızda diğer iki kolon kullanılmamış ve boş kalmış olacak.</p>

<p>Böyle durumlarda temsili ruh hali:</p>

<p><img class="center" src="http://rack.0.mshcdn.com/media/ZgkyMDEzLzA2LzEyL2Y4L0xpenp5TWNHdWlyLmMzYThhLmdpZgpwCXRodW1iCTEyMDB4OTYwMD4/312b02fe/7d8/Lizzy-McGuire.gif"></p>

<p> O halde bu işlemi tek kolonda halletmenin bir yoluna bakalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">AddStatusToCars</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:cars</span><span class="p">,</span> <span class="ss">:status</span><span class="p">,</span> <span class="ss">:integer</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Car</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="no">STATUSES</span> <span class="o">=</span> <span class="sx">%w{suitable_for_use rented out_of_use}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">status_to_s</span>
</span><span class='line'>      <span class="no">STATUSES</span><span class="o">[</span><span class="n">status</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">suitable_for_use?</span>
</span><span class='line'>      <span class="n">status_to_s</span> <span class="o">==</span> <span class="s1">&#39;suitable_for_use&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">rented?</span>
</span><span class='line'>      <span class="n">status_to_s</span> <span class="o">==</span> <span class="s1">&#39;rented&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">out_of_use?</span>
</span><span class='line'>      <span class="n">status_to_s</span> <span class="o">==</span> <span class="s1">&#39;out_of_use&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kullanımına bakalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">status_to_s</span>
</span><span class='line'><span class="c1"># =&gt; “suitable_for_use”</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">suitable_for_use?</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">rented?</span>
</span><span class='line'><span class="c1"># =&gt; false</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">out_of_use?</span>
</span><span class='line'><span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure>


<p>Üç kolon oluşturmak yerine bu daha tercih edilebilir. Ancak ekstra fonksiyon oluşturma işleri nereye kadar?</p>

<p><img alt="sparkles" src="http://ecmelkytz.github.com/images/emoji/unicode/2728.png" class="emoji" /> Enum&#8217;u devreye sokalım.</p>

<p>Car modelimize status alanını ekleyelim:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">AddStatusToCars</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>    <span class="n">add_column</span> <span class="ss">:cars</span><span class="p">,</span> <span class="ss">:status</span><span class="p">,</span> <span class="ss">:integer</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Modelimize enum ile status&#8217;larımızı tanımlayalım.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">enum</span> <span class="ss">status</span><span class="p">:</span> <span class="o">[</span><span class="ss">:suitable_for_use</span><span class="p">,</span> <span class="ss">:rented</span><span class="p">,</span> <span class="ss">:out_of_use</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kullanımına bakalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">status</span>
</span><span class='line'><span class="c1"># =&gt; “suitable_for_use”</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">rented?</span>
</span><span class='line'><span class="c1"># =&gt; false</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Kitap durumunu kiralık olarak değiştirelim</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">status</span> <span class="o">=</span> <span class="ss">:rented</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">rented!</span> <span class="c1"># güncellendi</span>
</span><span class='line'><span class="n">book</span><span class="o">.</span><span class="n">rented?</span>
</span><span class='line'><span class="c1"># =&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Bütün kiralık arabaları bulmak için (scope metodu)</span>
</span><span class='line'> <span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">rented</span>
</span><span class='line'><span class="c1"># =&gt; SELECT &quot;cars&quot;.* FROM &quot;cars&quot; WHERE &quot;cars&quot;.&quot;status&quot; = ?  [[&quot;status&quot;, 1]]</span>
</span><span class='line'><span class="c1"># [#&lt;Car:0x007f41d3eeeeee</span>
</span><span class='line'><span class="c1"># id: 1,</span>
</span><span class='line'><span class="c1"># status: 1,</span>
</span><span class='line'><span class="c1"># ]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Bütün kullanım dışı arabaları bulmak için (scope metodu)</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">Car</span><span class="o">.</span><span class="n">out_of_use</span>
</span><span class='line'><span class="c1"># =&gt; SELECT &quot;cars&quot;.* FROM &quot;cars&quot; WHERE &quot;cars&quot;.&quot;status&quot; = ?  [[&quot;status&quot;, 2]]</span>
</span><span class='line'><span class="c1"># =&gt; []  (Kullanım dışı araç yok)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Özetlersek:</p>

<p>Status ile ilgili veriler tabloda tek bir kolonda tutularak enum ile tanımlanan attribute&#8217;lar ile veritabanındaki tamsayılar eşleştirilir.  ActiveRecord bu dizi indislerine karşılık gerçek sembolleri çeker ve onları döndürür. Enum aynı zamanda  suitable_for_use, rented, out_of_use scope&#8217;larını oluşturur.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Routes Don't Repeat Yourself (DRY)]]></title>
    <link href="http://ecmelkytz.github.com/blog/2016/01/27/rails-routes-dont-repeat-yourself-dry/"/>
    <updated>2016-01-27T10:37:13+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2016/01/27/rails-routes-dont-repeat-yourself-dry</id>
    <content type="html"><![CDATA[<p>Şöyle bir routes&#8217;a sahip olduğumuzu düşünelim:</p>

<figure class='code'><figcaption><span>routes.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:comments</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">member</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:like</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">member</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:like</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:print</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hem <code>:comments</code> hemde <code>:posts</code> resources yapıları aynı route&#8217;a sahip <code>post :like</code>.</p>

<p>Rails 4&#8217;te route yapısında <strong>concern</strong>  kullanarak DRY aykırı durumları idare edebiliriz.</p>

<p>Şöyle ki:</p>

<figure class='code'><figcaption><span>routes.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">concern</span> <span class="ss">:vote</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">member</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:like</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">resources</span> <span class="ss">:comments</span><span class="p">,</span> <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:vote</span>
</span><span class='line'>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:vote</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:print</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu initramfs hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2016/01/20/ubuntu-initramfs-hatasi/"/>
    <updated>2016-01-20T14:30:38+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2016/01/20/ubuntu-initramfs-hatasi</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://res.cloudinary.com/dro8cemyf/image/upload/v1450428402/initramfs_jihx5g.png"></p>

<p>Araştırmalarım neticesinde elde ettiğim bilgilere göre bu hatanın olası 2 sebebi var.</p>

<p><strong>Sebep 1:</strong> Eğer Ubuntu&#8217;nuz Windows dosya sistemi üzerine kuruluysa ve windows düzgün bir şekilde kapatılmadıysa (incorrectly shutdown) bu sorun yaşanabilir.</p>

<p><strong>Sebep 2:</strong> Ubuntu kernel yükseltildiği (upgrated) için ya da kötü bir superblock&#8217;a sahip olduğunuz için bu sorun yaşanabilir.
Çözüm için önerilen bir çok yolu denedim. Ancak bir tanesi ile sorunu halledebildim. Bende tam olarak onu buraya not etmiş olacağım.</p>

<p>Ubuntu Live CD ile bilgisayarı boot ediyoruz. Ekrana aşağıdaki gibi bir görüntü geldiğinde <code>Try Ubuntu</code> deyip devam ediyoruz.</p>

<p><img class="center" src="http://res.cloudinary.com/dro8cemyf/image/upload/c_scale,h_385,w_561/v1450429545/ubuntu_ohikd8.png"></p>

<p>Ubuntu masaüstü açılacaktır. Sonrasında Ctrl + Alt + T ile terminali açıyoruz.</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo fdisk -l</span></code></pre></td></tr></table></div></figure>


<p>Devamında bilgisayarınıza takılı tüm diskler ve disk bölümlerinin listelendiği bir tablo karşınıza gelecektir.</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Device Boot Start End Blocks Id System
</span><span class='line'>/dev/sda1 * 1 30238 242886703+ 83 Linux
</span><span class='line'>/dev/sda2 30239 30401 1309297+ 5 Extended
</span><span class='line'>/dev/sda5 30239 30401 1309266 82 Linux swap / Solaris</span></code></pre></td></tr></table></div></figure>


<p>Linux hangi disk alanında ise onu seçip fsck komutu ile diski tamir etmek için aşağıdaki kod satırını çalıştırıyoruz.</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo fsck /dev/sda1</span></code></pre></td></tr></table></div></figure>


<p>Sistemin boot ayarlarını eski haline getirdikten sonra yeniden başlatıyoruz ve problem çözülmüş olması gerekiyor.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-AngularJS (Unknown provider: tProvider) Hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/09/12/rails-angularjs-unknown-provider-tprovider-hatasi/"/>
    <updated>2015-09-12T23:49:27+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/09/12/rails-angularjs-unknown-provider-tprovider-hatasi</id>
    <content type="html"><![CDATA[<p>Zamanında bu hata ile karşılaştığımda çözümü bulana kadar projede ilerlememi durdurduğu için kendi adıma buraya not etmekte fayda görüyorum.</p>

<p>Diyelimki Rails ile yazdığınız bir projede Angularjs kullandınız. Uygulamanız local&#8217;de sıkıntısız bir şekilde çalışıyor. Gelin görün ki production ortamında assets ile alakalı bir hata ile karşılaştınız.
Doğal olarak aşağıdaki kodu çalıştıracaksınız:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="no">RAILS_ENV</span><span class="o">=</span><span class="n">production</span> <span class="n">rake</span> <span class="ss">assets</span><span class="p">:</span><span class="n">precompile</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ancak console&#8217;da aldığınız hata  <code>Error: Unknown provider: tProvider</code> ise precompile işlemi ile sorun çözülmeyecektir.</p>

<h4>Çözüm:</h4>

<p><code>/config/environments/production.rb</code>&lsquo;e aşağıdaki kodu eklemelisiniz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">assets</span><span class="o">.</span><span class="n">js_compressor</span> <span class="o">=</span> <span class="no">Uglifier</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">mangle</span><span class="p">:</span> <span class="kp">false</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SOAP Web Servis ile CURL Kullanımını Bash ile Harmanlama]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/09/02/soap-web-servis-ile-curl-kullanimini-bash-ile-harmanlama/"/>
    <updated>2015-09-02T12:37:26+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/09/02/soap-web-servis-ile-curl-kullanimini-bash-ile-harmanlama</id>
    <content type="html"><![CDATA[<p>Terminalden ip öğrenme ve ip adresi sorgulamak (x ip kullanılıyor mu, hangi ülke tarafından kullanıyor vs.) için yazılmış basit bir bash kodudur. Curl ile web servis kullanımını bash ile harmanlar. Can sıkıntısı ürünüdür.</p>

<h5>Özetle: Atla (<img alt="horse" src="http://ecmelkytz.github.com/images/emoji/unicode/1f434.png" class="emoji" />) deve (<img alt="dromedary_camel" src="http://ecmelkytz.github.com/images/emoji/unicode/1f42a.png" class="emoji" />) değildir.</h5>

<p>Dosya içeriği:</p>

<figure class='code'><figcaption><span>geoip </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">GETGEOIPCONTEXT</span><span class="o">=</span><span class="s2">&quot;http://www.webservicex.net/geoipservice.asmx/GetGeoIPContext&quot;</span>
</span><span class='line'><span class="nv">GETGEOIP</span><span class="o">=</span><span class="s2">&quot;http://www.webservicex.net/geoipservice.asmx/GetGeoIP&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>get_ip<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  curl -H <span class="s2">&quot;Accept: application/soap+xml&quot;</span> -d <span class="s2">&quot;IPAddress=$1&quot;</span> <span class="k">${</span><span class="nv">GETGEOIP</span><span class="k">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>my_ip<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  curl -H <span class="s2">&quot;Accept: application/soap+xml&quot;</span> -d <span class="s2">&quot;IPAddress=$1&quot;</span> <span class="k">${</span><span class="nv">GETGEOIPCONTEXT</span><span class="k">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$@</span>
</span></code></pre></td></tr></table></div></figure>


<p>Terminal&#8217;de kullanım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>geoip my_ip
</span><span class='line'><span class="c"># Ekran çıktısı</span>
</span><span class='line'>  &lt;ReturnCode&gt;1&lt;/ReturnCode&gt;
</span><span class='line'>  &lt;IP&gt;193.xxx.xx.xx&lt;/IP&gt;
</span><span class='line'>  &lt;ReturnCodeDetails&gt;Success&lt;/ReturnCodeDetails&gt;
</span><span class='line'>  &lt;CountryName&gt;Turkey&lt;/CountryName&gt;
</span><span class='line'>  &lt;CountryCode&gt;TUR&lt;/CountryCode&gt;
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>geoip get_ip 195.xxx.xx.xx
</span><span class='line'><span class="c"># Ekran çıktısı</span>
</span><span class='line'>  &lt;ReturnCode&gt;1&lt;/ReturnCode&gt;
</span><span class='line'>  &lt;IP&gt;195.xxx.xx.xx&lt;/IP&gt;
</span><span class='line'>  &lt;ReturnCodeDetails&gt;Success&lt;/ReturnCodeDetails&gt;
</span><span class='line'>  &lt;CountryName&gt;Germany&lt;/CountryName&gt;
</span><span class='line'>  &lt;CountryCode&gt;DEU&lt;/CountryCode&gt;
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://res.cloudinary.com/dro8cemyf/image/upload/v1457516071/bigdeal_bpnp2u.jpg"></p>

<p>Yazdığımız bash kodunu konsoldan çalışır duruma getirme işine bakalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>chmod <span class="m">755</span> geoip
</span></code></pre></td></tr></table></div></figure>


<p>Artık scriptin bulunduğu dizinde şu şekilde çalıştırabiliriz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>./geoip my_ip
</span></code></pre></td></tr></table></div></figure>


<p>Sadece dosya ismiyle çalıştırmak istiyorum. Bundan dolayı sudo ile mc (Midnight Commander) aracılığıyla bash script&#8217;i /bin dizinine attım. Aynı işlemi yapabileceğimiz bir çok yol elbette mevcut.</p>

<p>Misal:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="c"># Taşımak için</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo mv path/geoip bin
</span><span class='line'>
</span><span class='line'><span class="c"># Kopyalamak için</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo cp path/geoip bin
</span></code></pre></td></tr></table></div></figure>


<p>[Terminal&#8217;de kullanım] kısmında gözüktüğü gibi scriptimiz çalışır hale gelecektir.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Two Way Binding - One Time Binding]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/28/angularjs-two-way-binding-one-time-binding/"/>
    <updated>2015-08-28T23:31:15+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/28/angularjs-two-way-binding-one-time-binding</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://docs.angularjs.org/img/guide/concepts-databinding1.png"></p>

<p>Two way binding (Çift yönlü veri bağlama) modeldeki değişiklikleri view&#8217;e, view&#8217;deki değişiklikleri modele aktarma işlemidir. Daha önceki <a href="http://ecmelkytz.github.io/blog/2015/08/11/angularjs-calisma-mantigi/">yazımda</a> two way binding ve doğal olarak digest cycle&#8217;dan uzun uzadıya bahsetmiştim.</p>

<p>Two way binding, kullanıcı etkileşimlerinin direk view kısmına aktarılması kısmında çok güzel bir işleve sahip olsa da; digest cycle tetiklendikten sonra en az 2, maksimum 10 kez çalıştığı düşünülürse performans anlamında büyük sorunlar oluşturacaktır. Şöyle ki; benim data binding sayım arttığı ölçüde $digest loop&#8217;un sayısı da artacaktır. Kullanıcı etkileşiminin yoğun olduğu bir sayfada performans anlamında yaşanabilecek sıkıntılar elbette ki kaçınılmaz olacaktır.</p>

<p>Hal böyle olunca Angularjs geliştiricileri Angular 1.3 versiyonu ile data binding&#8217;den kaynaklanan performans sorunlarını gidermek adına one-time binding&#8217;i tanıttılar. One time binding view-model güncelleme işlemini bir kez yapıyor, bundan sonra yapılan etkileşimler herhangi bir şekilde view&#8217;e ya da modele yansıtılmıyor. Yani digest cycle bir kez kullanıcı etkileşimlerini dinliyor ve bu sayede güncelleme bir kez yapılmış oluyor.</p>

<h3>One-time binding nasıl çalışır görelim:</h3>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1449581533/one-time-binding_eaj5td.gif" alt="" /></p>

<p>Yukarıdaki gif&#8217;den de anlaşılacağı üzere model&#8217;de yazdığım yazının ilk karakteri view&#8217;e bağlanıyor. Ondan sonraki etkileşimlerde hiçbir şekilde veri bağlama yapılmıyor.</p>

<h4>Syntax farkına bakalım:</h4>

<p>Two way binding</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;p&gt;</span> {{ name }} <span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>One time binding</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;p&gt;</span> {{ ::name }} <span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Single Page Application]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/15/angularjs-single-page-application/"/>
    <updated>2015-08-15T23:04:08+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/15/angularjs-single-page-application</id>
    <content type="html"><![CDATA[<p>Single page application (SPA), tek bir sayfada sunulan uygulamaların genel adıdır. SPA ile sayfa içinde gezinebilmemiz onu ayrı sayfalara bölmez.</p>

<p>Angularjs ile bir single page application nasıl oluşturuluyor. Angular bunun için nasıl bir route mekanizması kullanıyor ona bakalım.</p>

<figure class='code'><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;myApp&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;ngRoute&#39;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">config</span><span class="p">([</span><span class="s1">&#39;$routeProvider&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$routeProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$routeProvider</span><span class="p">.</span>
</span><span class='line'>    <span class="nx">when</span><span class="p">(</span><span class="s2">&quot;/home&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;home.html&#39;</span>
</span><span class='line'>    <span class="p">}).</span>
</span><span class='line'>    <span class="nx">when</span><span class="p">(</span><span class="s2">&quot;/services&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;services.html&#39;</span>
</span><span class='line'>    <span class="p">}).</span>
</span><span class='line'>    <span class="nx">when</span><span class="p">(</span><span class="s2">&quot;/clients&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;clients.html&#39;</span>
</span><span class='line'>    <span class="p">}).</span>
</span><span class='line'>    <span class="nx">otherwise</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">redirectTo</span><span class="o">:</span> <span class="s1">&#39;/home&#39;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Uygulamamızın modul&#8217;une ngRoute modul&#8217;unu dependency olarak belirtiyoruz. Yani modulun bağımlılıklarını belirtiyoruz. Bu sayede ngRoute içindeki her fonksiyonu/servisi kendi uygulamamızda da kullanabiliyoruz.</p>

<p>Config sadece Provider&#8217;lar için kullanılır. Provider&#8217;lar Angularjs&#8217;de en gelişmiş servis oluşturma kompanentidir. Buradaki <code>$routeProvider</code> servisi uygulama başlamadan Routing konfigürasyonunu sağlar.</p>

<p><code>$routeProvider</code> sayesinde eğer url isteği /home olursa template olarak <code>home.html</code> kullanılmasını, eğer istek /services olursa template olarak <code>services.html</code> kullanılmasını sağlıyoruz. <code>.otherwise</code> ise olmayan herhangi farklı bir istekte bulunulursa /home url&#8217;e yönlendirmek için kullanılmaktadır.</p>

<figure class='code'><figcaption><span>services.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Services Page<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Nobody can give you freedom. If you&#39;re a man, you take it.<span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Angular route yapısı için daha çok <a href="https://github.com/angular-ui/ui-router">ui-router</a> kullanılması tavsiye edilir.</p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html</span> <span class="na">ng-app=</span><span class="s">&quot;myApp&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;style.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://code.angularjs.org/1.3.9/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://code.angularjs.org/1.3.9/angular-route.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;script.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#/home&quot;</span><span class="nt">&gt;</span>Home<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#/services&quot;</span><span class="nt">&gt;</span>Services<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#/clients&quot;</span><span class="nt">&gt;</span>Clients<span class="nt">&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">ng-view</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Angularjs route yapısında <code>#</code> karakteri kullanılır. O yüzden linklerdeki url&#8217;lerde <code>#</code> karakteri kullanılmıştır. <code>ng-view</code> aslında Rails&#8217;de ki <code>yield</code> ile aynı işlevi görür. Angularda eğer bunu eklemezsek sayfada görüntü oluşmayacaktır.</p>

<p>Single Page Application örneğinin <a href="http://plnkr.co/edit/BrCnZCuCuT2b7ZdkTju1?p=preview">plunker adresi</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Çalışma Mantığı]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/11/angularjs-calisma-mantigi/"/>
    <updated>2015-08-11T00:26:37+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/11/angularjs-calisma-mantigi</id>
    <content type="html"><![CDATA[<p>Angularjs ile ilgili beni en çok uğraştıran konu kesinlikle angularjs&#8217;in çalışma mantığını anlatmak olacak. Çünkü Angularjs ng-app directive&#8217;i gibi basit bir söz dizilimi ile çalışmaya başlayıp, mekanizmayı tam anlamıyla anlamak için içerisine dallandıkça <strong>digest cycle</strong>,  <strong>$watch list</strong>, <strong>two way binding</strong>, <strong>dirty cheking</strong> mekanizmasının birbiri ile alakasının anlatılması gereken bir konu haline geliyor.</p>

<p>Eğer bir Angularjs uygulaması oluşturmak istiyorsanız elbetteki ilk yapacağınız iş anguların kütüphanesini projenize eklemek olacaktır. Angularjs&#8217;nin sayfanın başına veya sonuna eklenmesinin bir önemi yok çünkü Angularjs uygulaması DomReady olmadan yani tüm scriptler yüklenmeden boot etmiyor.</p>

<p>Angularjs uygulamasını başlatmak için <code>ng-app</code> yapısal directive ihtiyacımız vardır. Angularjs yüklendikten sonra uygulamanın başlaması için aranan ilk directive <code>ng-app</code>&lsquo;dir. <code>ng-app</code>&#8216;ın bulunduğu etiketin sarmaladığı alanlar arasında Angular uygulaması başlar.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">ng-app</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://code.angularjs.org/1.3.9/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yukarıdaki kodda <code>ng-app</code> html etiketine eklendiği için bu taglar arasında kalan yer Angularjs uygulaması olarak çalışacaktır. <code>ng-app</code> direktive&#8217;i aynı zamanda uygulamanın global scope&#8217;u olan <code>$rootScope</code> nesnesini oluşturmaktadır.
Yeri gelmişkende belirteyim,  <code>ng-app</code>&lsquo;in kullanımı W3C standartlarına uymadığı için <code>data-ng-app</code> kullanımı tavsiye edilmektedir.</p>

<p><code>ng-app</code> directive&#8217;inden sonra sayfa içerisindeki diğer directiveler aranmaya başlanır. Bulunan direktiveler uygulamaya bind edilir.  Bind edilenler <code>$wacth list</code>&lsquo;e eklenir. Daha sonrasında digest cycle kullanıcı etkileşimlerini dinlemeye başlar.</p>

<h4>Digest Cycle</h4>

<p>Digest Cycle uygulamanın view katmanını yani kullanıcının gördüğü ekrandaki verileri güncel tutmakla görevlidir. Kullanıcı tarafından yapılan en ufak bir etkileşimde view&#8217;in otomatik güncellenmesini sağlar.</p>

<p>Özetle; Digest Cycle kullanıcı etkileşimlerini dinliyor, bir değişiklik var ise view kısmını güncel tutuyor vs. tamam ama bunun sağlanmasında arkada nasıl bir mekanizma çalışıyor asıl buna değinmek ve biraz daha derine inmek istiyorum. Bu olayı two way binding üzerinden anlatacağım.</p>

<h4>Two Way Binding denilen şey ne, nasıl işler?</h4>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1449136639/desktop-animation2_av1hak.gif" alt="" /></p>

<p>Yukarıdaki gif görsel olarak two way binding dediğimiz şeydir. Görüldüğü üzere model içerisinde yaptığım her değişiklik bind ettiğim view kısmına anında aktarılıyor. <a href="http://plnkr.co/edit/ayo5ZxwxmKeptLTSxElu?p=preview">Plunker Code</a></p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;body</span> <span class="na">ng-app</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span> Merhaba {{ name }} <span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>{{ }} işareti angular&#8217;da expression olarak adlandırılır ve scope nesnesini view&#8217;e bind (bağlamaya) etmeye yarar.</p>

<p>Şimdi elimizde bir <code>$watch list</code>  adında bir listemizin olduğunu hayal edelim. Biz UI&#8217;ye her bind ettiklerimizi bu <code>$watch list</code>&lsquo;e  <code>$watch</code> nesnesi olarak eklediğimizi düşünelim. Digest cycle kullanıcı etkileşimlerini dinlerken her defasında bu  <code>$watch list</code>&#8216;e bakar.  Eğer bu <code>$watch</code>&#8216;lardan birinde herhangi bir değişiklik var ise model-view senkronizasyonunu sağlar (Two way binding&#8217;de olduğu gibi). Bu senkronizasyonu dirty cheking mekanizması ile yapar.</p>

<p><strong>Dirty Cheking Mekanizmasi:</strong> Bir değerin eski değeri ile yeni değerinin karşılaştırılmasıdır.</p>

<p><strong>$watch list oluşturma örneği 1:</strong></p>

<figure class='code'><figcaption><span>controller.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;MainController&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">foo</span> <span class="o">=</span> <span class="s2">&quot;Foo&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">bar</span> <span class="o">=</span> <span class="s2">&quot;Bar&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  Hello {{ bar }}
</span></code></pre></td></tr></table></div></figure>


<p>Yukarıdaki örnekte html sayfasında ekran çıktısı olarak “Hello Bar” yazısı gözükecektir. Çünkü {{ bar }} expression&#8217;ı scope nesnesini view&#8217;e bind edecek. Controller içinde scope&#8217;a tanımlanmış bir de foo değişkeni var ancak o view&#8217;e bind edilmemiş durumda. İşte bu yüzden <code>$watch list</code>&lsquo;e sadece 1 tane $watch nesnesi eklenecek. Digest cycle ile de sadece <code>$scope.bar</code> üzerindeki değişiklikler dinlenecek ve view&#8217;e aktarılacak.</p>

<p><strong>$watch list oluşturma örneği 2:</strong></p>

<figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  Name: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;name&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  Password: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;password&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;password&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>ng-model</code> directivenin özelliklerinden birisi input nesnesini scope’a bağlamaktır. Yani $scope.name ve $scope.password&#8217;un ikiside bind edildiği için <code>$watch list</code>&lsquo;e 2 tane $watch nesnesi eklenecek ve digest cycle bu iki inputtaki değişiklikleri dinleyecek.</p>

<p><strong>Ufak bilgi:</strong> Digest çevirimi tetiklendikten sonra minimum 2 maximum 10 kez çalışır. (Angular 1.4’de 20 kez)</p>

<p><strong>Digest Loop <code>$watch list</code> gezerken nasıl bir senaryo izliyor biraz daha bakalım:</strong></p>

<blockquote><ul>
<li>Hey $watch, senin değerin ne?

<ul>
<li>9</li>
</ul>
</li>
<li>Pekala, bir değişiklik var mı? (Dirty Checking)

<ul>
<li>Hayır yok.</li>
</ul>
</li>
</ul>


<p>(Herhangi bir değişiklik olmadığı için diğer $watch’a geçer.)</p>

<ul>
<li>Hey sen, senin değerin ne?

<ul>
<li>Foo</li>
</ul>
</li>
<li>Bir değişiklik var mı?  (Dirty Checking)

<ul>
<li>Evet, önceden Bar’dım.</li>
</ul>
</li>
<li>Güzel, o halde DOM’u güncelleyelim.</li>
</ul>
</blockquote>

<p><code>$watch</code>’lar bitene kadar bu çevirim devam eder. $digest loop bittiğinde değişiklik var ise DOM&#8217;da değişiklik yapılır.</p>

<p>Uzun uzadıya elimden geldiğince anlatmaya çalıştım.</p>

<p>O halde şu söz de burada dursun:</p>

<blockquote><p>“Ne kadar bilirsen bil, anlattıkların karşındakinin anlayabildiği kadardır.”</p></blockquote>

<p>Velhasıl-ı kelam faydalı olması dileğiyle&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Nedir?]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/07/angularjs-nedir/"/>
    <updated>2015-08-07T22:31:00+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/07/angularjs-nedir</id>
    <content type="html"><![CDATA[<p>Google&#8217;da çalışan Misko Hevery&#8217;nin 2009 yılında şahsi bir projesi olarak başlayan AngularJS şuan açık kaynak olarak yayınlanmakta olup; yüzlerce geliştiriciye ve binlerce kullanıcıya sahip devasa bir  frontend geliştirme frameworklerinden biridir. Adındanda anlaşılacağı üzere gelişmiş bir javascript kütüphanesidir.</p>

<p>Aslına bakarsanız AngularJS ile Javascript ve Jquery&#8217;nin yaptığı herşeyi yapabilirsiniz.  Bu noktada Anguları tercih etme meselesine gelirsek; kolaylığı, custom directive özelliği, az kod ile çok iş yapılabilmesi (“Write less do more” her ne kadar Jquery sloganı olsada..), hızlı response sağlaması vs. şeklinde sayılabilecek bir çok güzelliği barındırmaktadır. Angular kullanmak için daha fazla neden arıyorsanız Murat Çorlu&#8217;nun yazdığı <a href="http://muratcorlu.com/post/angularjs-kullanmak-icin-10-neden/">yazıyı</a> okumanızı tavsiye ederim.</p>

<p><img class="center" src="https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRIgkmHJXLPra2-SCPAmtpn6xXWSwcvVOnrLc9hn_wV3ntJH6RZ1g"></p>

<p>Angularjs deyince hepsi olmamakla birlikte akla gelebilecek temel unsurlar yukarıdaki resimde mevcuttur. Hepsinden kabaca söz edip daha detaylı bilgileri başka blog girdilerinde yazmayı düşünüyorum.</p>

<ul>
<li>Angularda two way binding dediğimiz şey çift yönlü veri bağlama yani Model&#8217;deki değişiklikleri View&#8217;e, View&#8217;deki değişiklikleri Model&#8217;e aktarma işlemidir. Bir de one time binding var. Bunların izahını sonraya bırakıyorum.</li>
<li>Angularda Template dediğimiz şeyler aslında viewlerimizdir.</li>
<li>Bir sayfadan başka sayfaya geçildiğinde geri işlemi için eski state&#8217;i tutan bir hafızaya (geçmiş bilgisine) ihtiyaç vardır bunu  History mekanızması sağlar.</li>
<li>Factories, Services ve yukarıdaki resimde olmayan Provider Angular&#8217;da servis oluşturma komponentleridir.</li>
<li>Angular bünyesinde Jquery&#8217;nin Lite versiyonu vardır. Bunu jqLite modülü ile sağlar. Eğer projenizde jquery dosyaları yok ise Angular jqlite modülünü kullanacaktır. Aksi takdirde sistemde yüklü olan jquery dosyasını kullanır.</li>
<li>MVC bir design patterndir. Angular ilk başlarda MVC mantığı ile geliştirilmiş ancak daha sonrasında MVVM design patterni kullanılmıştır.  Buradaki VM(ViewModel) aynı zamanda angulardaki $scope servisine denkttir.</li>
<li>Angularda Directive&#8217;ler dışında DOM&#8217;a müdahale etmemek gerekiyor. Directive deyince DOM manipülasyonlarının yoğun olarak yapıldığı yer aklımıza gelmeli. Yapısal directiveler anguların kendi bünyesindeki  directivelerdir (ng-controller, ng-if, ng-show vs.). Birde kendimizin oluşturabileceği custom directiveler vardır. Custom directiveler ile kendi Html etiketimizi oluşturup Html&#8217;e yeni özellikler ekleyebiliriz.</li>
<li>Angular form validasyonlarında benimde severek kullandığım validasyon mekanizmasına sahiptir. Sunucuya gitmeden client tarafında verileri validasyona tabi tutuyoruz.</li>
<li><p>Dependency Injection ise uygulamanın bağımlılıklarının belirtilmesidir. Mesela bir modulde third party kütüphane kullanma ihtiyacı var ise ya da farklı bir modul ile ilişkili ise bunları dependecy olarak module eklememiz gerekmektedir.</p></li>
<li><p>Angular ile Single Page Application(SPA) oluşturabilirsiniz. SPA imkanıyla beraber angular route kaynaklı bazı SEO problemleri yaşanabilir. Angularda route yapısında # karakteri kullanılır.</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#/users
</span><span class='line'>#/users/new</span></code></pre></td></tr></table></div></figure>


<p>Google # işaretinin gerçek bir adres karakteri olmadığını bildiği için bu karakterden sonra ne yazıldıysa yazılsın onu indexlemiyor. =(</p>

<p>Yukarıdaki bilgiler detaya inmeden kabaca üstünden geçilerek yazılmıştır. Bu sayfadaki bütün bilgilerin ayrıntısını ilerleyen zamanlarda yazmayı düşünmekteyim.</p>

<p>Son olarak;
Angular hızlı response oluşturur dedik. Peki nasıl?</p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1448222532/browser1_pyrbaa.png" alt="" /></p>

<p>Bir web sitesine girmeye çalıştığınızı düşünün. İlk olarak browserdan server&#8217;a URL isteğinde bulunuyoruz. Server bize cevap olarak web sayfasını ve assets (Javascript vs.)&lsquo;i döndürüyor. Daha sonra kullanıcı herhangi bir linke tıkladığında, server&#8217;a yine bir istek gidiyor ve dönen cevap ilk dönen cevap ile aynı oluyor. Yani tekrar sayfanın tamamı ve assets yükleniyor.</p>

<p>Birde AngularJS ile bu iş nasıl oluyor ona bakalım.</p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1448222636/browser2_fqhyc3.png" alt="" /></p>

<p>Sayfa ilk yüklendiğinde geleneksel senaryo ile aynı responsu alacağız. Ancak kullanıcı bir linke tıkladığında veya başka bir yeni istekte bulunduğunda diğerinde olduğu gibi bütün bir sayfayı ve assets&#8217;i yüklemiyor. Önceden oluşturduğu veriden istenilen veriyi JSON data olarak çekiyor. Dolayısıyla istemci-sunucu trafiğini azaltmış olup hızlı bir cevap elde etmiş oluyoruz.</p>

<h3>Faydalı olabilecek linkler</h3>

<ul>
<li>Projenin github üzerinden son hali : <a href="https://github.com/angular/angular.js">https://github.com/angular/angular.js</a></li>
<li>Mail listesi: <a href="&#x6d;&#97;&#x69;&#108;&#116;&#111;&#x3a;&#97;&#x6e;&#x67;&#117;&#108;&#x61;&#114;&#x40;&#x67;&#x6f;&#x6f;&#x67;&#x6c;&#x65;&#103;&#x72;&#111;&#x75;&#x70;&#115;&#46;&#x63;&#111;&#x6d;">&#x61;&#110;&#103;&#x75;&#x6c;&#97;&#114;&#x40;&#103;&#x6f;&#111;&#103;&#x6c;&#101;&#x67;&#114;&#111;&#117;&#x70;&#x73;&#x2e;&#x63;&#111;&#x6d;</a></li>
<li>Blog sayfası: <a href="http://blog.angularjs.org">http://blog.angularjs.org</a></li>
<li>Bütün versiyonları: <a href="https://code.angularjs.org">https://code.angularjs.org</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby: attr_accessor Kullanımı]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/07/03/ruby-attr-accessor-kullanimi/"/>
    <updated>2015-07-03T15:45:44+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/07/03/ruby-attr-accessor-kullanimi</id>
    <content type="html"><![CDATA[<p>Person adında bir sınıfımızın olduğunu farzedelim:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span> <span class="c1"># =&gt; NoMethodError: undefined method &#39;name&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>name</code> adında bir metot tanımlamadığımız sürece yukarıdaki gibi hata alacağız.</p>

<p>O halde metodumuzu tanımlayalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="c1">#  instance variable</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="c1"># =&gt; nil</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Ecmel&quot;</span> <span class="c1"># =&gt; NoMethodError: undefined method `name=&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>name</code> metodunu tanımladık ancak görüldüğü gibi sadece okuma yapabiliyoruz, herhangi bir değer atayamıyoruz.</p>

<p>İşte bu iki işlemden biri reader (değişkenin değerine erişilmesi) diğeri ise writer (değişkenin değerinin değiştirilmesi) olarak adlandırılır.</p>

<p>Yukarıda writer metodu oluşturmamıştık şimdi onu da oluşturalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span> <span class="c1"># reader</span>
</span><span class='line'>    <span class="vi">@name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span><span class="o">=</span><span class="p">(</span><span class="n">str</span><span class="p">)</span> <span class="c1"># writer</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="n">str</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Ecmel&quot;</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="c1"># =&gt; &quot;Ecmel&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Artık reader ve writer metodları kullanarak örnek değişkenin (@name) değerine erişip onu değiştirebiliriz.
Peki her seferinde bu metodları bu şekilde tanımlayacak mıyız?</p>

<p><strong>Bu işin kolayına bakalım:</strong></p>

<p>Yukarıdaki gibi iki ayrı fonksiyon tanımlamaya gerek yok.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="kp">attr_writer</span> <span class="ss">:name</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Daha kolayına bakalım:</strong></p>

<p>Hem reader hem de writer metodlarının işlevselliğine sahip bir metot:  <code>attr_accessor</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Ecmel&quot;</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="c1"># =&gt; &quot;Ecmel&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>attr_accessor :name</code>  reader ve writer metodlarını oluşturmanın yanı sıra bir de @name (instance variable/örnek değişken) oluşturur.</p>

<p>İnstance variable&#8217;ı kullanalım:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">say_hello</span>
</span><span class='line'>    <span class="s2">&quot;Hello </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">person</span> <span class="o">=</span> <span class="no">Person</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Ecmel&quot;</span>
</span><span class='line'><span class="n">person</span><span class="o">.</span><span class="n">say_hello</span> <span class="c1"># =&gt; &quot;Hello Ecmel&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally</p>

<p><img class="center" src="http://res.cloudinary.com/dro8cemyf/image/upload/c_scale,h_280,w_346/v1457011914/thatsit.png_m778zf.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Html Renklerin Hex ve RGB Kodlarını Bulan Terminal Uygulaması: Grabc]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/06/14/html-renklerin-hex-ve-rgb-kodlarini-bulan-terminal-uygulamasi-grabc/"/>
    <updated>2015-06-14T12:44:17+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/06/14/html-renklerin-hex-ve-rgb-kodlarini-bulan-terminal-uygulamasi-grabc</id>
    <content type="html"><![CDATA[<p>Zamanında, ekranda gördüğüm herhangi bir rengin html kodunu anında nasıl bulabilirim diye araştırma yaparken <strong>grabc</strong> diye bir terminal uygulamasına denk gelmiştim. Uzun zamandan beri de severek kullanmaktayım.</p>

<p>Özellikle front-end geliştirenler için çok güzel bir kolaylık sağlayacağını söyleyebilirim.</p>

<h3>Kurulum:</h3>

<figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install grabc</span></code></pre></td></tr></table></div></figure>


<h3>Kullanım:</h3>

<p>Terminale <strong>grabc</strong> yazdığınız zaman cursor(imleç) <code>+</code> şekline benzer bir hal alacaktır ve siz nereye tıklarsanız oranın renginin hex ve rgb kodunu ekrana basacaktır.</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ grabc
</span><span class='line'>
</span><span class='line'>#f55567
</span><span class='line'>245,85,103</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Upcase, Downcase, Capitalize, Titleize Metodları (Non-Ascii)]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/11/17/rails-upcase/"/>
    <updated>2014-11-17T21:58:03+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/11/17/rails-upcase</id>
    <content type="html"><![CDATA[<p>Kelime, cümle vs. yazarken ingiliz alfabesi işinizi görüyorsa upcase, downcase, capitalize, titleize gibi metodlar istediğiniz gibi çalışacaktır. Ancak Türkçe, Rusça vs. karakterler işin içine girince bu metodlar tek başına istenilen sonucu vermemektedir. Bu tarz problemleri aşmak için <a href="https://github.com/lang/unicode_utils">UnicodeUtils</a> gemini kullanmakta fayda var.</p>

<h2>Upcase</h2>

<p>Bu method girilen kelimenin ya da cümlenin bütün harflerini büyük harfe çevirir.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;ecmel&quot;</span><span class="o">.</span><span class="n">upcase</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;ECMEL&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;ücmöl&quot;</span><span class="o">.</span><span class="n">upcase</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;üCMöL&quot;</span> <span class="c1">#İstenilen bu değil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Diğer yol</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">upcase</span><span class="p">(</span><span class="s2">&quot;öcmül&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;ÖCMÜL&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">upcase</span><span class="p">(</span><span class="s2">&quot;isim&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;ISIM&quot;</span>  <span class="c1">#İstenilen bu değil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Diğer yol</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;öcü&quot;</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">upcase</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;ÖCÜ&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;isim&quot;</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">upcase</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;ISIM&quot;</span> <span class="c1">#İstenilen bu değil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Çözüm</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">upcase</span><span class="p">(</span><span class="s2">&quot;isim&quot;</span><span class="p">,</span> <span class="ss">:tr</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;İSİM&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Downcase</h2>

<p>Bu method girilen kelimenin ya da cümlenin bütün harlerini küçük harfe çevirir.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">downcase</span><span class="p">(</span><span class="s2">&quot;ECMEL&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;ecmel&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">downcase</span><span class="p">(</span><span class="s2">&quot;ÖİLŞÜ&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;öilşü&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Diğer yol</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;ÖİÜŞĞ&quot;</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">downcase</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;öiüşğ&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Capitalize</h2>

<p>Bu method girilen kelimenin ya da cümlenin sadece ilk harfini büyük harfe çevirir.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;ecmel&quot;</span><span class="o">.</span><span class="n">capitalize</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Ecmel&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;öcü&quot;</span><span class="o">.</span><span class="n">capitalize</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;öcü&quot;</span> <span class="c1">#İstenilen bu değil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Diğer yol</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;öcü&quot;</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">capitalize</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Öcü&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;izmir&quot;</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">capitalize</span> <span class="c1">#İstenilen bu değil</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Izmir&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Çözüm</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">upcase</span><span class="p">(</span><span class="s2">&quot;izmir&quot;</span><span class="p">,</span> <span class="ss">:tr</span><span class="p">)</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">capitalize</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;İzmir&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Titleize</h2>

<p>Bu method girilen bir cümlenin her kelimesinin ilk harfini büyük harfe çevirir.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;ecmel kytz&quot;</span><span class="o">.</span><span class="n">titleize</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Ecmel Kytz&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;önsöz iyi&quot;</span><span class="o">.</span><span class="n">titleize</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;önsöz Iyi&quot;</span> <span class="c1">#İstenilen bu değil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Diğer yol</span>
</span><span class='line'><span class="o">&gt;</span> <span class="s2">&quot;önsöz iyi&quot;</span><span class="o">.</span><span class="n">mb_chars</span><span class="o">.</span><span class="n">titleize</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Önsöz Iyi&quot;</span> <span class="c1">#İstenilen bu değil</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Diğer yol</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">titlecase</span><span class="p">(</span><span class="s2">&quot;önsöz iyi&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Önsöz Iyi&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Çözüm</span>
</span><span class='line'><span class="o">&gt;</span> <span class="no">UnicodeUtils</span><span class="o">.</span><span class="n">titlecase</span><span class="p">(</span><span class="s2">&quot;önsöz iyi&quot;</span><span class="p">,</span> <span class="ss">:tr</span><span class="p">)</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="s2">&quot;Önsöz İyi&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to change a particular column background color in jquery of datatable]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/09/26/how-to-change-a-particular-column-background-color-in-jquery-of-datatable/"/>
    <updated>2014-09-26T23:13:32+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/09/26/how-to-change-a-particular-column-background-color-in-jquery-of-datatable</id>
    <content type="html"><![CDATA[<p>Datatable kullanarak bazı verilerinizi listeliyor ve bazı değerlere göre satırların veya kolonların renklerini değiştirmek istiyorsanız aşağıdaki gibi bir yöntem kullanabilirsiniz.</p>

<p>Aşağıdaki Datatable&#8217;da <code>Durum</code> kolonuna göre satırların arkaplan renginin nasıl değiştirileceğine bakalım.</p>

<p><img src="http://i.imgur.com/dZbtEg4.png" alt="Imgur" /></p>

<p><code>Durum</code> kolonundaki değer eğer &ldquo;Onaylanmış&rdquo; ise arkaplan rengini yeşil, diğer durumlar için arkaplan rengini kırmızı yapalım.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#datatable&#39;</span><span class="p">).</span><span class="nx">dataTable</span><span class="p">({</span>
</span><span class='line'>    <span class="s2">&quot;fnRowCallback&quot;</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">nRow</span><span class="p">,</span> <span class="nx">aData</span><span class="p">,</span> <span class="nx">iDisplayIndex</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="nx">aData</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">==</span> <span class="s2">&quot;Onaylanmış&quot;</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td&#39;</span><span class="p">,</span> <span class="nx">nRow</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;#dff0d8&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td&#39;</span><span class="p">,</span> <span class="nx">nRow</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;#f2dede&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">nRow</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Eğer aşağıdaki Datatable&#8217;da ki gibi sadece bir kolon için arkaplan renginin değişmesini istiyorsanız:</p>

<p><img src="http://i.imgur.com/kLMGeX9.png" alt="Imgur" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#datatable&#39;</span><span class="p">).</span><span class="nx">dataTable</span><span class="p">({</span>
</span><span class='line'>    <span class="s2">&quot;fnRowCallback&quot;</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">nRow</span><span class="p">,</span> <span class="nx">aData</span><span class="p">,</span> <span class="nx">iDisplayIndex</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span> <span class="nx">aData</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">==</span> <span class="s2">&quot;Onaylanmış&quot;</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td:eq(5)&#39;</span><span class="p">,</span> <span class="nx">nRow</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;#dff0d8&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;td:eq(5)&#39;</span><span class="p">,</span> <span class="nx">nRow</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s1">&#39;background-color&#39;</span><span class="p">,</span> <span class="s1">&#39;#f2dede&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">nRow</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Devise(Could not found table) Hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/09/09/rails-devise-could-not-found-table-hatasi/"/>
    <updated>2014-09-09T11:51:16+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/09/09/rails-devise-could-not-found-table-hatasi</id>
    <content type="html"><![CDATA[<p>Oluşturulan devise modelinin <strong>user</strong> olduğunu varsayarak okuyunuz.<br/>
Şimdi devise&#8217;ı Gemfile&#8217;a eklediniz, install ettiniz, viewleri oluşturdunuz, routes ayarladınız (bu konulara girmiyorum devise hakkında ayrıntılı bilgi için <a href="https://github.com/plataformatec/devise">bakınız</a> ) ve rake db:migrate kodunu çalıştırdığınız zaman herhangi bir geri dönüş almadınız.</p>

<p>Neyse birde serverda deneyelim bu işi dediniz. <code>http://localhost:3000/users/sign_in</code> adresine girmeye çalıştığınız zaman <strong>Could not find table &lsquo;users&rsquo;</strong> tarzında bir hata ile karşılaştınız. Yani users tablosu bulunamıyor .</p>

<p><img src="http://i.imgur.com/8Osy4h4.png" alt="Imgur" /></p>

<p>Zaten rake db:migrate kodunun çalışmamasından bir sorunla karşılaşmayı beklemek mantıklı olacaktır.</p>

<p><strong>Çözüm:</strong><br/>
Çok basit bir çözümü olmasıyla beraber gereksiz yere vaktimi çaldığı için buraya not düşmeye karar verdim.<br/>
<strong>db -> migrate</strong> altında <strong>devise_create_users</strong> dosyasının uzantısını <strong>.rb</strong> yapın sonrasında rake db:migrate çalıştırın tablolarınız sorunsuz bir şekilde oluşacaktır. <br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Ckeditor]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/08/28/rails-plus-ckeditor/"/>
    <updated>2014-08-28T16:13:22+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/08/28/rails-plus-ckeditor</id>
    <content type="html"><![CDATA[<p>Rails uygulamalarınıza aşağıdaki resimde görülen tarzda bir text editörü eklemek istiyorsanız ckeditor
kullanmak bu iş için uygun olacaktır.</p>

<p><img class="center" src="http://i.imgur.com/PlrBDC6.png"></p>

<p>Öncelikle uygulamamızdaki Gemfile içerisine gerekli gem&#8217;leri ekleyelim.</p>

<figure class='code'><figcaption><span>Gemfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">gem</span> <span class="s1">&#39;paperclip&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;ckeditor&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ve Bundle ediyoruz.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>Gemleri install ettik. Peki yüklenecek dosyalar için nasıl model oluşturacağız? Active_record orm&#8217;si paperclip gemini default olarak kullanır. Mongoid, Carrierwave ile nasıl kullanılacağını merak ediyorsanız daha ayrıntılı bilgi için <a href="https://github.com/galetahub/ckeditor">README</a> kaynağına göz atabilirsiniz. <br/>
ActiveRecord + Paperclip kullanımı:</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="ss">ckeditor</span><span class="p">:</span><span class="n">install</span> <span class="o">--</span><span class="n">orm</span><span class="o">=</span><span class="n">active_record</span> <span class="o">--</span><span class="n">backend</span><span class="o">=</span><span class="n">paperclip</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bir sorunla karşılaşmadıysanız terminalden hangi dosyaların oluşturulduğunu görebilirsiniz.</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'> <span class="n">create</span>  <span class="n">config</span><span class="o">/</span><span class="n">initializers</span><span class="o">/</span><span class="n">ckeditor</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'> <span class="n">route</span>  <span class="n">mount</span> <span class="no">Ckeditor</span><span class="o">::</span><span class="no">Engine</span> <span class="o">=&gt;</span> <span class="s1">&#39;/ckeditor&#39;</span>
</span><span class='line'> <span class="n">create</span>  <span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">ckeditor</span><span class="o">/</span><span class="n">asset</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'> <span class="n">create</span>  <span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">ckeditor</span><span class="o">/</span><span class="n">picture</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'> <span class="n">create</span>  <span class="n">app</span><span class="o">/</span><span class="n">models</span><span class="o">/</span><span class="n">ckeditor</span><span class="o">/</span><span class="n">attachment_file</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'> <span class="n">create</span>  <span class="n">db</span><span class="o">/</span><span class="n">migrate</span><span class="o">/</span><span class="mi">20140829114657</span><span class="n">_create_ckeditor_assets</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<p>Tabloların oluşmasını tetikleyelim o halde:</p>

<figure class='code'><figcaption><span>Terminal </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>


<p>Şimdide javascript kodunu <code>/views/layouts/application.html.erb</code> içerisine include ediyoruz.  Ayrıca <a href="http://ckeditor.com/download">ckeditor-download</a> adresinden ckeditor&#8217;u indirip dosyalara erişebilirsiniz.</p>

<figure class='code'><figcaption><span>application.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">javascript_include_tag</span> <span class="s1">&#39;ckeditor/ckeditor.js&#39;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Sonra <code>body</code> içerisine javascript kodunu ekliyoruz:</p>

<figure class='code'><figcaption><span>application.html.erb </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='Javascript'><span class='line'> <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;textarea.ckeditor&#39;</span><span class="p">).</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;textarea.ckeditor&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">CKEDITOR</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">id</span><span class="p">);</span>
</span><span class='line'>          <span class="p">});</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ckeditor&#8217;u nerede göstermek istiyorsanız onunla ilgili sayfaya form içeriği ekliyoruz. Bu uygulama için ben <a href="https://github.com/plataformatec/simple_form">simple_form</a> gemini kullanıyorum. İstediğiniz görüntüyü elde etmek için form içeriği şöyle olacaktır:</p>

<figure class='code'><figcaption><span>_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= simple_form_for(@yourmodel) do |f| %&gt;</span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">form</span><span class="o">.</span><span class="n">input</span> <span class="ss">:content</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:ckeditor</span><span class="p">,</span> <span class="ss">:input_html</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:ckeditor</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:toolbar</span> <span class="o">=&gt;</span> <span class="s1">&#39;Full&#39;</span><span class="p">}</span> <span class="p">}</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;%end%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Artık ckeditor&#8217;u kullanabilirsiniz.
Bütün bunların yanında daha detaylı bilgiye <a href="https://github.com/galetahub/ckeditor">Githubda ckeditor gem</a>, <a href="http://ckeditor.com/download">Ckeditor&#8217;un resmi sayfası</a> adreslerinden ulaşabilirsiniz.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - 'The json native gem requires installed build tools' hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/08/10/rails-the-json-native-gem-requires-installed-build-tools-hatasi/"/>
    <updated>2014-08-10T10:41:35+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/08/10/rails-the-json-native-gem-requires-installed-build-tools-hatasi</id>
    <content type="html"><![CDATA[<p>Rails kurulumunu gerçekleştirirken oluşabilecek hatalardan bir tanesidir. Bu hata bazı kütüphanelerin sistemde eksik olmasından kaynaklanmaktadır. Hatanın çözümü için ise aşağıdaki gibi bir yol izlenebilir.</p>

<p>Ruby 1.9.3 veya üzeri bir ruby sürümünün sisteme yüklü olduğunu ve ruby sürümüne uygun bir development kit’in de sisteminizde kurulu olduğunu farzediyorum. Bunları indirmek için bkz: <a href="http://rubyinstaller.org/downloads">Ruby Installer</a></p>

<figure class='code'><figcaption><span>Terminal(Hata Kodu)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="ss">ERROR</span><span class="p">:</span> <span class="no">Error</span> <span class="n">installing</span> <span class="ss">json</span><span class="p">:</span> <span class="no">The</span> <span class="s1">&#39;json&#39;</span> <span class="n">native</span> <span class="n">gem</span> <span class="n">requires</span> <span class="n">installed</span> <span class="n">build</span> <span class="n">tools</span><span class="o">.</span>
</span><span class='line'><span class="no">Please</span> <span class="n">update</span> <span class="n">your</span> <span class="no">PATH</span> <span class="n">to</span> <span class="kp">include</span> <span class="n">build</span> <span class="n">tools</span> <span class="ow">or</span> <span class="n">download</span> <span class="n">the</span> <span class="no">DevKit</span> <span class="n">from</span>
</span><span class='line'><span class="s1">&#39;http://rubyinstaller.org/downloads&#39;</span> <span class="ow">and</span> <span class="n">follow</span> <span class="n">the</span> <span class="n">instructions</span> <span class="n">at</span>
</span><span class='line'><span class="s1">&#39;http://github.com/oneclick/rubyinstaller/wiki/Development-Kit&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Daha sonra Ruby193 dosyası(versiyona göre sizde farklı olabilir) içerisine kurduğumuz DevKit&#8217;in bulunduğu dizine geçiyoruz ve gerekli işlemleri sırasıyla yapıyoruz.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="n">cd</span> <span class="ss">C</span><span class="p">:\</span><span class="n">ruby193</span><span class="p">\</span><span class="no">DevKit</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">init</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">review</span>
</span><span class='line'><span class="n">ruby</span> <span class="n">dk</span><span class="o">.</span><span class="n">rb</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>Şimdide json kurmayı deneyelim.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">json</span>
</span></code></pre></td></tr></table></div></figure>


<p>Json başarılı bir şekilde kurulmuş olmalı. Hepsi bu kadar artık rails kurulumunu gerçekleştirebiliriz.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rails</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Teknogirişim]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/06/05/tekno-girisim/"/>
    <updated>2014-06-05T14:57:18+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/06/05/tekno-girisim</id>
    <content type="html"><![CDATA[<p>Teknogirişim Sermayesi Desteği Programını merak ediyorsanız veya başvuru yaptıysanız hangi aşamaların sizi beklediğini bu yazı içerisinde bulabilirsiniz. Kendim 2014 yılı için TGSD programına başvurmuştum. Dolayısıyla daha sonraki yıllarda, sizden istenecek belgeler ve geçerli işlem süreleri büyük ihtimal farklılık gösterecektir bunu dikkate alarak okuyunuz.</p>

<h3>Teknogirişim Programı Nedir?</h3>

<p>Bilim, Sanayi ve Teknoloji Bakanlığı tarafından 500 genç girişimciye, şirket kurmaya teşvik etmek amacıyla 100 bin TL hibe para veren bir destek programıdır. 2009 yılından bu yana program devam etmektedir. Daha ayrıntılı bilgi için <a href="http://sagm.sanayi.gov.tr/ServiceDetails.aspx?dataID=217">bakınız</a>.</p>

<h3>Teknogirişim Süreci</h3>

<p>Teknogirişim 3 aşamadan oluşmaktadır. Şimdi bu aşamalara ve süreçlerine değineceğim.</p>

<h2>Birinci Aşama</h2>

<p>İlki öndeğerlendirme aşamasıdır. Bu aşama için sizden projeniz hakkında genel bir bilgi istenmektedir. Oluşturmuş olduğunuz proje raporunu belirtilen süre içerisinde <a href="https://biltek.sanayi.gov.tr/Sayfalar/default.aspx">biltek</a> adresinden sisteme yüklemeniz gerekmektedir. Aynı zamanda kargoyla da ilgili adrese belgeleri göndermeniz gerekmektedir. Biltek sitesine kayıt olmanız için e-devlet şifrenize ihtiyaç vardır. Bunun içinde en yakın bir ptt şubesine başvurabilirsiniz. Gerekli belgeleri hazırlayıp zamanında sisteme yüklerseniz ilk aşamayı %90 geçersiniz. Ben öndeğerlendirme raporunu 09.11.2013 itibari ile sisteme yüklemiştim ve 08.01.2014 tarihinde öndeğerlendirme sonucu tarafıma hem e-mail hemde mesaj ile bildirilmişti.
<br/><br/></p>

<h2>İkinci Aşama</h2>

<p>İkinci aşama olan işplanı belgesini hazırlamak ilkine göre biraz daha meşakkatli. Çünkü sizden tam anlamıyla bütçe gereksinimlerini izah etmeniz istenmekte. Nereye ne kadar para harcanacak, ne için harcanacak vs. hepsinin izahını yapmanız gerekmektedir. Yani bir nevi şirketi tamam kurmak istiyorsun ama nasıl kuracaksın, nerede kuracaksın, nasıl idare edeceksin vs. sorularına cevap vermeniz gerekmektedir. Ben bu belgeyi 22.01.2014 itibari ile gönderdim. İlk belgenin açıklanmasıyla bu belgeyi göndermem arasında yaklışık 15-20 günlük bir zaman dilimi vardı. İş planı belgesini hazırlamak diğerine göre daha uzun sürdüğü için daha sonrasında 1 hafta daha süresi uzatılmıştı. Sonucu ise 31.01.2014 tarihi itibari ile tarafıma bildirildi.
<br/>
Bu zaman dilimlerini yazıyorum çünkü sonuçları beklerken ne zaman ne olacak insan bilemiyor ve beklemek biraz sıkıntılı bir süreç. Yani üç aşağı beş yukarı süreçler hakkında fikriniz olması hasebiyle yazıyorum.
<br/><br/></p>

<h2>Üçüncü Aşama</h2>

<p>Geldik üçüncü aşamaya. İkinci aşamanın sonuçlandığı gün üçüncü aşama için panel tarihini bildiren bir mail gönderildi. Paneller 10 Şubat - 7 Mart tarihleri arasında Bilkent Cyberpark’ta yapıldı. Sizede belirli tarihler arasında bir günü belirleyip bildireceklerdir. Üçüncü aşama için sizden heyet önünde projenizi anlatmanız için 10 dakikalık bir görsel sunum hazırlamanız isteniyor. Bir tavsiye olarak Guy Kawasaki&#8217;nin 10 20 30 kuralını uygulamanızı öneririm. Önceleri her ne kadar mantıklı bulmasamda bazı tecrübelerime dayanarak artık çok mantıklı buluyorum. Yani kıcaca 10 sayfa, 20 dakika ve 30 punto kuralıdır. 10 sayfaya anlatacaklarım sığmaz diyebilirsiniz zaten anlatacaklarınız büyük ihtimal 30 sayfayada sığmaz çünkü genelde içerik çok yoğun oluyor. Ama siz projenin sadece temel yerlerinden bahsedin geresini bırakın heyet merak ediyorsa sorsun. Zaten siz sunum yaptıktan sonra soru cevap kısmı daha uzun sürüyor.
<br/><br/>
Sunum günü Bilkent Cyberpark&#8217;a kalkıp gidiyorsunuz. Tabi Ankara&#8217;yı çok bilmeyen birisiyseniz biraz sıkıntı çekmeden olmuyor bu işler. Sunum yaptığımız heyetler belirli kategorilere göre ayrılmıştı. Benim sunum yaptığım heyet için günde 4 sunum belirlenmişti yani günde 4 kişinin sunumunu dinliyorlardı. Sabah ve öğleden sonra anlatacaklar olmak üzere bir plan yapılmıştı. Heyet 5 kişiden oluşuyordu. Heyettekilerden birinin teknogirişim sürecinde bizi bilgilendiren kişi olduğunu çok sonradan öğrendim. Diğerleri ise sizin anlatacağınız konu hakkında bilgi sahibi olan kişilerden oluşuyor.
Edindiğim bilgi ve deneyime göre heyetin dikkat ettiği en önemli konu sizin bu iş fikrini pazarlayıp pazarlayamayacağınız. Bu konu üzerinde çok duruluyor. Tabi her iş fikri için farklı hassasiyetlerin olması olasıdır. 17.03.2014 tarihinde de teknogirişim sermayesi desteği almaya hak kazananlar belli oldu. <a href="http://www.sanayi.gov.tr/AnnouncementDetails.aspx?annID=6474&amp;lng=tr">2014 yılı kazananların listesi</a>.
<br/>
İş fikrinize inanıyor ve güveniyorsanız bu iş fikri üzerine birde şirket kurmak istiyorsanız Teknogirişim programını değerlendirmenizi tavsiye ederim.
Kolay gelsin.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Second Life - Pandorabots]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/02/15/second-life-pandorabots/"/>
    <updated>2014-02-15T09:56:37+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/02/15/second-life-pandorabots</id>
    <content type="html"><![CDATA[<p>Pandorabots web siteniz için chatbot oluşturmanızı, geliştirmenizi ve yayınlamanızı sağlayan açık kaynak tabanlı bir platformdur. Pandorabots aynı zamanda internetteki en büyük chatbot platformudur. <a href="http://pandorabots.com/static/html/">Pandorabots hakkında daha ayrıntılı bilgi</a>. Bu yazıda Pandorabots ile oluşturduğunuz chatbot&#8217;un Second Life içerisinde nasıl kullanılacağı ile ilgili bilgiler bulabilirsiniz.</p>

<p>Pandorabots&#8217;da  AIML programlama kullanılır ve &ldquo;Standart AIML&rdquo;, &ldquo;Dr.Wallace&rsquo;s A.L.I.C.E&rdquo;, &ldquo;Annotated A.L.I.C.E AIML&rdquo; gibi bazı botlar ile öntanımlı olarak gelir. Pandorabots da oluşturulan her Bot’un kendine ait bir Bot_ID numarası mevcuttur. Bu Bot_ID kullanılarak oluşturduğunuz Bot’un Second Life ortamında kullanımını sağlayabilirsiniz.</p>

<h3>Pandorabots’da Kişisel Bot Oluşturma</h3>

<p>Yeni kayıt olmak için <a href="http://pandorabots.com/botmaster/en/new-account">http://pandorabots.com/botmaster/en/new-account</a> adresini ziyaret ediniz.
Kayıt işlemlerini tamamladıktan sonra <code>Creat a Pandorabots</code> menüsüne basarak yeni Bot’unuzu oluşturabilirsiniz.</p>

<p><img class="center" src="http://i.imgur.com/NzdaQ5U.png"></p>

<p>Bot oluştururken halihazırda oluşturulmuş 5 tane chatbottan birisini seçebilirsiniz. Eğer bu Bot’un AIML dosyalarını kullanmak istemiyor ve sıfırdan yeni bir bot oluşturmak istiyorsanız Bot oluştururken <code>No initial content, the pandorabot starts with no knowledge</code> seçeneğini seçmelisiniz.</p>

<p><img class="center" src="http://i.imgur.com/cfhS23E.png"></p>

<p>Eğer Bot’unuzu oluşturduysanız ve içersinde AIML dosyaları mevcutsa deneme yapmak için <code>Train</code> e basarak oluşturduğunuz bot ile konuşmaya başlayabilirsiniz. Yeni AIML dosyası eklemek istiyorsanız AIML menüsünden <code>Create a new AIML file</code> a basmalısınız.
<code>Properties</code> menüsü ile Bot’unuzun özelliklerini belirleyebilirsiniz.</p>

<p><strong><em>Önemli:</em></strong> Bot’unuzda yaptığınız değişikliklerin kullanılabilir hale gelmesi için Bot’un ana sayfasında republish tuşuna basmalısınız.</p>

<h3>Pandorabots ile Second Life Bağlantısı</h3>

<p>Second Life&#8217;da oluşturduğunuz herhangi bir nesne içerisine aşağıdaki script kodlarını ekleyin.</p>

<p>Kodlarım <a href="https://gist.github.com/ecmelkytz/9003889">burada!</a></p>

<p><strong><em>Not:</em></strong>  Gist sayfasındaki ilk kod içerisinde bulunan botid kısmını kendi oluşturduğunuz Bot’un id numarası ile değiştirin.</p>

<p>Bu işlemlerden sonra Second Life&#8217;da istediğiniz herhangi bir nesle ile oluşturmuş olduğunuz chatbot vasıtasıyla konuşabilirsiniz.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chroma Key Nedir?]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/01/29/chroma-key-nedir/"/>
    <updated>2014-01-29T21:46:50+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/01/29/chroma-key-nedir</id>
    <content type="html"><![CDATA[<p>Film çekim setlerinde arkaplanın sadece mavi ya da sadece yeşil renkte olduğunu gördüyseniz ne amaçla bu şekilde yapıldığını merak etmiş olabilirsiniz. Filmlerin böyle bir ortamda çekilmesi Chroma Key tekniğini uygulayabilmek içindir.</p>

<p><img class="center" src="http://upload.wikimedia.org/wikipedia/en/0/0d/300_comparison.JPG"></p>

<h3>Teknik olarak chroma key nasıl uygulanır?</h3>

<p>Chroma Key eşit şekilde aydınlatılmış mavi veya yeşil (tek renk) bir arka plan önünde bulunan bir kişi veya nesnenin, başka bir video görüntüsü veya resim üzerine bindirilmesi esasına dayanır.</p>

<ul>
<li>Blue Screen, Green Screen, Chroma Key, greenbox, bluebox ve CSO (Color Seperation Overlay) terimleri ortak kullanılan terimlerdir ve temelleri aynı esaslara dayanır.</li>
<li>Chroma key bir program değil tamamen bir tekniktir.</li>
</ul>


<p>Öncelikle düz yeşil renkli (veya mavi renkli) arkaplanda çekilmesi gereken sahneler çekiliyor ardından post-prodüksiyon(çekimler bittikten sonra çekim üzerinde yapılan düzenlemeler) aşamasında özel bilgisayar programları aracılığıyla bu tek renk arkaplan anahtar renk olarak seçilip siliniyor (transparan yapılıyor) ve yerine konulması istenen görüntü giydiriliyor.
Görüntüdeki renkli arkaplanı (greenscreen, bluescreen) silme işlemine “key”lemek denir.</p>

<h3>Chroma Key Tarihi</h3>

<ul>
<li>Chroma key ilk olarak Larry Butler tarafından 1940 yılında çekilmiş Bağdat Hırsızı (The Thief of Bagdad) filminde kullanılmış ve daha sonra bu tekniği geliştiren Petro Vlahos&#8217;a Oscar ödülü kazandırmıştır.</li>
<li>Aynı zamanda 1940 yılından beri chroma key tekniği için yeşil ve mavi renkler standart olarak kullanılmaktadır.</li>
</ul>


<h3>Neden Genellikle Mavi ya da Yeşil Renk Kullanılır?</h3>

<p>Aslında arkaplan rengi olarak yeşil ve mavi renkler dışında başka renklerde kullanılabilir. Ancak buradaki amaç insan tenine en uzak renklerin seçilmesidir. Eğer siyah renk, anahtar renk olarak seçilirse ve bu renk üzerine görüntü bindirilirse kişinin veya nesnenin üzerinde bulunan siyah renkli yerler üzerine de görüntü binecektir. Böylece kişiler ve nesneler üzerinde görüntü bozuklukları yaşanacaktır. Bu yüzden chroma key tekniğinde anahtar renk seçerken nesneler üzerinde fazla kullanılmayan renk seçilmeli ve ekran önündeki insan veya nesnenin seçilen anahtar renk ile aynı renkte bir şey barındırmaması gerekmektedir.</p>

<p><img class="center" src="http://www.virtualstudio.tv/assets/media/blog-images/what_is_chroma_keying_green_screen.jpg">
Croma key çekim bittikten sonra (post-production) uygulanabileceği gibi çekim ile eş zamanlı(real-time) olarakta uygulanabilen bir tekniktir.
Günlük olarak hepimizin şahit olabileceği bir örnek vermek gerekirse hava tahmin programlarını ele alabiliriz. Spiker hava tahminini sunarken genelde önünde hava durumunun bulunduğu bir coğrafi bölge haritası bulunur ve kendisi bu harita üzerinde belirli bölgeleri göstererek sunumunu yapar. Bu çekim eğer canlı olarak yapılıyorsa chroma key real-time olarak uygulanır. Aksi takdirde spiker greenscreen önünde sunumunu bitirdikten sonra chroma key uygulanacaktır.</p>

<h3>Chroma Key Gelişme Aşamaları</h3>

<p>Chroma key tekniği günümüzdeki kullanılan hale gelene kadar çok aşamadan geçmiştir. İlk başlarda bu teknik ile hareketli görüntüler çekilemiyordu.
Yani greenscreen teknolojisinin kullanıldığı sahnelerde kamera sabitti. Bunun sebebi ise arkaplanı ve önde duran aktörü saptamada sorun yaşanmasıydı.
<img class="center" src="http://ibxk.com.br/2012/6/materias/14572694012135422.jpg"></p>

<p>Ancak günümüzde arkaplana “+”, “x” işaretleriyle yada düzgün aralıklı noktalarla referans noktaları konulmakta ve bu yardımcı noktalar aracılığıyla bilgisayarlar, arkaplanı ve öndeki aktörü çok daha rahat bir şekilde saptayabilmektedir.
Yukarıdaki resimde siyah noktalar aşağı veya yukarı doğru biraz meyilli yerleştirilmiştir. Bu sebeple kamera hareketinin de o yönde olacağını söyleyebiliriz. Dolayısıyla çekim kapsamına giren bu arkaplanlar öndeki aktörden daha kolay ayırt edilmektedir.<br/>
Bu yöntemle kamera hareketli dahi olsa bu noktalar bilgisayar tarafından takip edilebilmekte ve kamera açısı kaybedilmemektedir.</p>

<h3>Croma Key Tekniğinde Dikkat Edilmesi Gerekenler</h3>

<ul>
<li><p>Çekilen görüntülerde arkaplan rengi olarak yeşil kullanılıyorsa oyuncunuzun yeşil tonlarında bir şey giymemesi gereklidir. Bu özellik tüm renkler için geçerlidir.</p></li>
<li><p>Cilalı yüzeyler ve cam gibi yansıtıcılığı yüksek nesneler arkaplanı yansıtabilirler. Bu yüzden parlak mücevherler, cilalı ayakkabılar ve yansıtıcı dekorlardan kaçınmak gerekmektedir.</p></li>
<li><p>Çekimlerde, arkaplan perdesinin eşit olarak aydınlatılması önemli olduğu için çok sayıda ışık kullanmak gerekli olabilir. Bu yüzden dar alanlarda çekim yapmaktan kaçınılmalıdır. Oyuncunun perdeden mümkün olduğu kadar uzakta durması da kenarlarda oluşacak renk akmalarını önleyecektir. Bu yüzden profesyonel stüdyolarda çekim yapmak tercih edilmelidir.</p></li>
<li><p>Çok ince detaylar &ldquo;key&#8221;leme esnasında kaybolabilir. Bu nedenle mümkünse oyuncunun saçlarının toplu olması, bol ve saçaklı kıyafetlerden kaçınılması, hızlı hareketler yapılmaması ve sahnede aynı anda az kişi ve obje olması bu problemleri minimize eder.</p></li>
</ul>


<h3>Chroma Key Reflect Media Teknolojisi</h3>

<p><img class="center" src="http://www.lighthouse.ae/galorg/21022013020832ledring.jpg/21022013020832ledring.jpg"></p>

<p>Son olarak Chroma key yeni teknolojisi olan Reflect Media teknolojisinden bahsedeceğim.
Standart chroma key de gerekli olan fon aydınlatma sistemleri bu teknolojide kullanılmasına gerek yoktur. Bu teknoloji ile arkaplan fonunun yeşil veya mavi olmasına da gerek yoktur. Yeşil veya mavi LED&#8217;lerin halka oluşturacak şekilde dizilmesiyle oluşturulan alete LiteRing denilmektedir.  Bu alet kameranın merceğinin önüne takılmaktadır. Resimde görüldüğü gibi arkadaki perde gri olmasına rağmen LiteRing sayesinde elde edilen arkaplan rengi yeşil olmaktadır.</p>
]]></content>
  </entry>
  
</feed>
