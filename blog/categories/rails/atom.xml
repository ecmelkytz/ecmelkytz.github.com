<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Ecmel Kaytazoğlu]]></title>
  <link href="http://ecmelkytz.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://ecmelkytz.github.com/"/>
  <updated>2016-02-01T09:14:23+02:00</updated>
  <id>http://ecmelkytz.github.com/</id>
  <author>
    <name><![CDATA[Ecmel Kaytazoğlu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails - Routes Don't Repeat Yourself (DRY)]]></title>
    <link href="http://ecmelkytz.github.com/blog/2016/01/27/rails-routes-dont-repeat-yourself-dry/"/>
    <updated>2016-01-27T10:37:13+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2016/01/27/rails-routes-dont-repeat-yourself-dry</id>
    <content type="html"><![CDATA[<p>Şöyle bir route&#8217;a sahip olduğumuzu düşünelim:</p>

<p><figure class='code'><figcaption><span>routes.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:comments</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">member</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:like</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;resources :posts do</span>
</span><span class='line'><span class="sr">  member do</span>
</span><span class='line'><span class="sr">    post :like</span>
</span><span class='line'><span class="sr">  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:print</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Hem <code>:comments</code> hemde <code>:posts</code> resources yapıları aynı route&#8217;a sahip <code>post :like</code>.</p>

<p>Rails 4&#8217;te route yapısında <strong>concern</strong>  kullanarak DRY aykırı durumları idare edebiliriz.</p>

<p>Şöyleki:</p>

<p><figure class='code'><figcaption><span>routes.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">concern</span> <span class="ss">:vote</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">member</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:like</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;resources :comments, concerns: :vote&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">resources</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">concerns</span><span class="p">:</span> <span class="ss">:vote</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">collection</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:print</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-Angularjs (Unknown provider: tProvider) Hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/09/12/rails-angularjs-unknown-provider-tprovider-hatasi/"/>
    <updated>2015-09-12T23:49:27+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/09/12/rails-angularjs-unknown-provider-tprovider-hatasi</id>
    <content type="html"><![CDATA[<p>Zamanında bu hata ile karşılaştığımda çözümü bulana kadar projede ilerlememi durdurduğu için kendi adıma buraya not etmekte fayda görüyorum.</p>

<p>Diyelimki Rails ile yazdığınız bir projede Angularjs kullandınız. Uygulamanız local&#8217;de sıkıntısız bir şekilde çalışıyor. Gelin görün ki production ortamında assets ile alakalı bir hata ile karşılaştınız.
Doğal olarak aşağıdaki kodu çalıştıracaksınız:</p>

<pre><code class="Ruby">RAILS_ENV=production rake assets:precompile
</code></pre>

<p>Ancak console&#8217;da aldığınız hata  <code>Error: Unknown provider: tProvider</code> ise precompile işlemi ile sorun çözülmeyecektir.</p>

<h4>Çözüm:</h4>

<p><code>/config/environments/production.rb</code>&lsquo;e aşağıdaki kodu eklemelisiniz.</p>

<pre><code class="ruby">config.assets.js_compressor = Uglifier.new(mangle: false)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Upcase, Downcase, Capitalize, Titleize Metodları (Non-Ascii)]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/11/17/rails-upcase/"/>
    <updated>2014-11-17T21:58:03+02:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/11/17/rails-upcase</id>
    <content type="html"><![CDATA[<p>Kelime, cümle vs. yazarken ingiliz alfabesi işinizi görüyorsa upcase, downcase, capitalize, titleize gibi metodlar istediğiniz gibi çalışacaktır. Ancak Türkçe, Rusça vs. karakterler işin içine girince bu metodlar tek başına istenilen sonucu vermemektedir. Bu tarz problemleri aşmak için <a href="https://github.com/lang/unicode_utils">UnicodeUtils</a> gemini kullanmakta fayda var.</p>

<h2>Upcase</h2>

<p>Bu method girilen kelimenin ya da cümlenin bütün harflerini büyük harfe çevirir.
&#8220;`Ruby</p>

<blockquote><p>&ldquo;ecmel&rdquo;.upcase
=> &ldquo;ECMEL&rdquo;
&ldquo;ücmöl&rdquo;.upcase
=> &ldquo;üCMöL&rdquo; #İstenilen bu değil</p></blockquote>

<h1>Diğer yol</h1>

<blockquote><p>UnicodeUtils.upcase(&ldquo;öcmül&rdquo;)
=> &ldquo;ÖCMÜL&rdquo;
UnicodeUtils.upcase(&ldquo;isim&rdquo;)
=> &ldquo;ISIM&rdquo;  #İstenilen bu değil</p></blockquote>

<h1>Diğer yol</h1>

<blockquote><p>&ldquo;öcü&rdquo;.mb_chars.upcase.to_s
=> &ldquo;ÖCÜ&rdquo;
&ldquo;isim&rdquo;.mb_chars.upcase.to_s
=> &ldquo;ISIM&rdquo; #İstenilen bu değil</p></blockquote>

<h1>Çözüm</h1>

<blockquote><p>UnicodeUtils.upcase(&ldquo;isim&rdquo;, :tr)
=> &ldquo;İSİM&rdquo;
&#8220;`</p></blockquote>

<h2>Downcase</h2>

<p>Bu method girilen kelimenin ya da cümlenin bütün harlerini küçük harfe çevirir.
&#8220;`Ruby</p>

<blockquote><p>UnicodeUtils.downcase(&ldquo;ECMEL&rdquo;)
=> &ldquo;ecmel&rdquo;
UnicodeUtils.downcase(&ldquo;ÖİLŞÜ&rdquo;)
=> &ldquo;öilşü&rdquo;</p></blockquote>

<h1>Diğer yol</h1>

<blockquote><p>&ldquo;ÖİÜŞĞ&rdquo;.mb_chars.downcase
=> &ldquo;öiüşğ&rdquo;
&#8220;`</p></blockquote>

<h2>Capitalize</h2>

<p>Bu method girilen kelimenin ya da cümlenin sadece ilk harfini büyük harfe çevirir.
&#8220;`Ruby</p>

<blockquote><p>&ldquo;ecmel&rdquo;.capitalize
=> &ldquo;Ecmel&rdquo;
&ldquo;öcü&rdquo;.capitalize
=> &ldquo;öcü&rdquo; #İstenilen bu değil</p></blockquote>

<h1>Diğer yol</h1>

<blockquote><p>&ldquo;öcü&rdquo;.mb_chars.capitalize
=> &ldquo;Öcü&rdquo;
&ldquo;izmir&rdquo;.mb_chars.capitalize #İstenilen bu değil
=> &ldquo;Izmir&rdquo;</p></blockquote>

<h1>Çözüm</h1>

<blockquote><p>UnicodeUtils.upcase(&ldquo;izmir&rdquo;, :tr).mb_chars.capitalize
=> &ldquo;İzmir&rdquo;
&#8220;`</p></blockquote>

<h2>Titleize</h2>

<p>Bu method girilen bir cümlenin her kelimesinin ilk harfini büyük harfe çevirir.</p>

<pre><code class="Ruby">&gt; "ecmel kytz".titleize 
=&gt; "Ecmel Kytz"
&gt; "önsöz iyi".titleize
=&gt; "önsöz Iyi" #İstenilen bu değil

#Diğer yol
&gt; "önsöz iyi".mb_chars.titleize.to_s
=&gt; "Önsöz Iyi" #İstenilen bu değil

#Diğer yol
&gt; UnicodeUtils.titlecase("önsöz iyi")
=&gt; "Önsöz Iyi" 

#Çözüm
&gt; UnicodeUtils.titlecase("önsöz iyi", :tr)
=&gt; "Önsöz İyi"
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Devise(Could not found table) Hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/09/09/rails-devise-could-not-found-table-hatasi/"/>
    <updated>2014-09-09T11:51:16+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/09/09/rails-devise-could-not-found-table-hatasi</id>
    <content type="html"><![CDATA[<p>Oluşturulan devise modelinin <strong>user</strong> olduğunu varsayarak okuyunuz.<br/>
Şimdi devise&#8217;ı Gemfile&#8217;a eklediniz, install ettiniz, viewleri oluşturdunuz, routes ayarladınız (bu konulara girmiyorum devise hakkında ayrıntılı bilgi için <a href="https://github.com/plataformatec/devise">bakınız</a> ) ve rake db:migrate kodunu çalıştırdığınız zaman herhangi bir geri dönüş almadınız.</p>

<p>Neyse birde serverda deneyelim bu işi dediniz. <code>http://localhost:3000/users/sign_in</code> adresine girmeye çalıştığınız zaman <strong>Could not find table &lsquo;users&rsquo;</strong> tarzında bir hata ile karşılaştınız. Yani users tablosu bulunamıyor .</p>

<p><img src="http://i.imgur.com/8Osy4h4.png" alt="Imgur" /></p>

<p>Zaten rake db:migrate kodunun çalışmamasından bir sorunla karşılaşmayı beklemek mantıklı olacaktır.</p>

<p><strong>Çözüm:</strong><br/>
Çok basit bir çözümü olmasıyla beraber gereksiz yere vaktimi çaldığı için buraya not düşmeye karar verdim.<br/>
<strong>db -> migrate</strong> altında <strong>devise_create_users</strong> dosyasının uzantısını <strong>.rb</strong> yapın sonrasında rake db:migrate çalıştırın tablolarınız sorunsuz bir şekilde oluşacaktır. <br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails - Ckeditor]]></title>
    <link href="http://ecmelkytz.github.com/blog/2014/08/28/rails-plus-ckeditor/"/>
    <updated>2014-08-28T16:13:22+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2014/08/28/rails-plus-ckeditor</id>
    <content type="html"><![CDATA[<p>Rails uygulamalarınıza aşağıdaki resimde görülen tarzda bir text editörü eklemek istiyorsanız ckeditor
kullanmak bu iş için uygun olacaktır.</p>

<p><img class="center <a" src="href="http://i.imgur.com/PlrBDC6.png">http://i.imgur.com/PlrBDC6.png</a>&#8221;></p>

<p>Öncelikle uygulamamızdaki Gemfile içerisine gerekli gem&#8217;leri ekleyelim.</p>

<p><figure class='code'><figcaption><span>Gemfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">paperclip</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">ckeditor</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Ve Bundle ediyoruz.</p>

<pre><code class="Ruby Terminal">bundle install
</code></pre>

<p>Gemleri install ettik. Peki yüklenecek dosyalar için nasıl model oluşturacağız? Active_record orm&#8217;si paperclip gemini default olarak kullanır. Mongoid, Carrierwave ile nasıl kullanılacağını merak ediyorsanız daha ayrıntılı bilgi için <a href="https://github.com/galetahub/ckeditor">README</a> kaynağına göz atabilirsiniz. <br/>
ActiveRecord + Paperclip kullanımı:</p>

<pre><code class="Ruby Terminal ">rails generate ckeditor:install --orm=active_record --backend=paperclip
</code></pre>

<p>Bir sorunla karşılaşmadıysanız terminalden hangi dosyaların oluşturulduğunu görebilirsiniz.</p>

<pre><code> create  config/initializers/ckeditor.rb
 route  mount Ckeditor::Engine =&gt; '/ckeditor'
 create  app/models/ckeditor/asset.rb
 create  app/models/ckeditor/picture.rb
 create  app/models/ckeditor/attachment_file.rb
 create  db/migrate/20140829114657_create_ckeditor_assets.rb
</code></pre>

<p>Tabloların oluşmasını tetikleyelim o halde:</p>

<pre><code>rake db:migrate
</code></pre>

<p>Şimdide javascript kodunu <code>/views/layouts/application.html.erb</code> içerisine include ediyoruz.  Ayrıca <a href="http://ckeditor.com/download">ckeditor-download</a> adresinden ckeditor&#8217;u indirip dosyalara erişebilirsiniz.</p>

<pre><code class="Ruby application.html.erb">&lt;%= javascript_include_tag 'ckeditor/ckeditor.js' %&gt;
</code></pre>

<p>Sonra <code>body</code> içerisine javascript kodunu ekliyoruz:</p>

<pre><code class="Javascript application.html.erb ">
 &lt;script type="text/javascript"&gt;
  $(document).ready(function() {
      if ($('textarea.ckeditor').length &gt; 0) {
          var data = $('textarea.ckeditor');
          $.each(data, function(i) {
              CKEDITOR.replace(data[i].id);
          });
      }
  });
&lt;/script&gt;
</code></pre>

<p>Ckeditor&#8217;u nerede göstermek istiyorsanız onunla ilgili sayfaya form içeriği ekliyoruz. Bu uygulama için ben <a href="https://github.com/plataformatec/simple_form">simple_form</a> gemini kullanıyorum. İstediğiniz görüntüyü elde etmek için form içeriği şöyle olacaktır:</p>

<pre><code class="Ruby _form.html.erb">&lt;%= simple_form_for(@yourmodel) do |f| %&gt;
&lt;%= form.input :content, :as =&gt; :ckeditor, :input_html =&gt; { :ckeditor =&gt; {:toolbar =&gt; 'Full'} } %&gt;
&lt;%end%&gt;
</code></pre>

<p>Artık ckeditor&#8217;u kullanabilirsiniz.
Bütün bunların yanında daha detaylı bilgiye <a href="https://github.com/galetahub/ckeditor">Githubda ckeditor gem</a>, <a href="http://ckeditor.com/download">Ckeditor&#8217;un resmi sayfası</a> adreslerinden ulaşabilirsiniz.</p>
]]></content>
  </entry>
  
</feed>
