<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: github | Ecmel Kaytazoğlu]]></title>
  <link href="http://ecmelkytz.github.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://ecmelkytz.github.com/"/>
  <updated>2017-02-02T15:27:30+02:00</updated>
  <id>http://ecmelkytz.github.com/</id>
  <author>
    <name><![CDATA[Ecmel Kaytazoğlu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Komutları 2: git diff, git blame, git checkout, git clean, git reset, git stash, .gitignore]]></title>
    <link href="http://ecmelkytz.github.com/blog/2016/08/12/git-komutlari-2/"/>
    <updated>2016-08-12T15:04:05+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2016/08/12/git-komutlari-2</id>
    <content type="html"><![CDATA[<h4>git diff</h4>

<p>Kendi yerelimizde yaptığımız değişiklikler neticesinde, projeyi yönlendirdiğimiz repo arasında oluşan farkları gösterir. Hangi satırı sildiğimiz, hangi satırı eklediğimiz vs. bilgilerini içerir.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git diff  <span class="c">#Yapılan bütün değişiklikleri gösterecektir.</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Yapılan bütün değişiklikleri değil de sadece istediğimiz dosya içerisinde nasıl bir değişiklik yapıldığını görmek için o dosyanın adını <code>git diff</code> komutunun yanına eklemeliyiz.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git diff README.md <span class="c">#README.md dosyasında yapılan değişiklikleri gösterir.</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470987741/diff_nhrmdn.png" alt="" /></p>

<!--more-->


<h4>git blame</h4>

<p>Belirlenen dosyadaki her bir satırın hangi commit ile eklendiği, kimin tarafından ve ne zaman eklendiği bilgilerini gösterir.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git blame README.md
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470990914/git_blame_phsyrz.png" alt="" /></p>

<h4>git checkout</h4>

<p>Dosyalarda yapmış olduğumuz değişiklikleri geri alır. Bu komut ile yapılan değişiklikleri geri aldığımız için <code>git status</code> komutunun ekran çıktısında dosyamızın ismi artık gözükmeyecektir.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git checkout README.md <span class="c">#README.md dosyasındaki değişiklikleri siler.</span>
</span><span class='line'>~/examp-git<span class="nv">$ </span>git checkout . <span class="c">#Yapılan bütün değişiklikleri geri alır.</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code>git checkout HEAD~</code> komutu ile projemizi istediğimiz commit durumuna geri döndürebiliriz. Şöyle ki: Projemizin bulunduğu dizinde <code>git log</code> komutunu çalıştırdığımız zaman en son commitden en baştaki committe doğru bütün commitler sıralanacaktır.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git log
</span><span class='line'>commit 898de0b8f2d21497569ed980c990d32778e7bd5c
</span><span class='line'>Author: ecmel &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#101;&amp;#x63;&amp;#x6d;&amp;#101;&amp;#108;&amp;#46;&amp;#107;&amp;#x79;&amp;#x74;&amp;#122;&amp;#x40;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#109;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x65;&amp;#x63;&amp;#109;&amp;#x65;&amp;#x6c;&amp;#46;&amp;#107;&amp;#x79;&amp;#116;&amp;#122;&amp;#64;&amp;#103;&amp;#x6d;&amp;#x61;&amp;#105;&amp;#x6c;&amp;#x2e;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</span>
</span><span class='line'>Date:   Tue Jul <span class="m">26</span> 08:57:38 <span class="m">2016</span> +0300&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;Hava durumuna yeni açıklama ekle
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;commit 1985f16aa89d41fae740086c53fb1ecefca4affc
</span><span class='line'>Author: ecmel &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#116;&amp;#111;&amp;#58;&amp;#x65;&amp;#99;&amp;#x6d;&amp;#x65;&amp;#x6c;&amp;#46;&amp;#x6b;&amp;#x79;&amp;#x74;&amp;#x7a;&amp;#x40;&amp;#x67;&amp;#109;&amp;#x61;&amp;#x69;&amp;#108;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x65;&amp;#x63;&amp;#109;&amp;#101;&amp;#108;&amp;#46;&amp;#107;&amp;#x79;&amp;#116;&amp;#x7a;&amp;#x40;&amp;#103;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;</span>
</span><span class='line'>Date:   Wed Jul <span class="m">20</span> 12:47:44 <span class="m">2016</span> +0300&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;Tasarımsal düzenlemeler
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;commit d44645020926795a4f6b9d74c279632d344543ec
</span><span class='line'>Author: ecmel &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#101;&amp;#x63;&amp;#109;&amp;#101;&amp;#x6c;&amp;#x2e;&amp;#x6b;&amp;#x79;&amp;#x74;&amp;#x7a;&amp;#x40;&amp;#103;&amp;#109;&amp;#97;&amp;#x69;&amp;#108;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#x6d;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x65;&amp;#99;&amp;#x6d;&amp;#x65;&amp;#x6c;&amp;#46;&amp;#x6b;&amp;#x79;&amp;#116;&amp;#x7a;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#46;&amp;#99;&amp;#111;&amp;#x6d;&lt;/a&gt;</span>
</span><span class='line'>Date:   Wed Jul <span class="m">20</span> 09:20:50 <span class="m">2016</span> +0300&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;Excel dosya isimlerinde düzenleme yap
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>En son commit &ldquo;Hava durumuna yeni açıklama ekle&rdquo; iken ben &ldquo;Excel dosya isimlerinde düzenleme yap&rdquo; commiti durumuna geçmek istiyorsam çalıştırmam gereken kod: <code>git checkout HEAD~2</code></p>

<p>Geçmek istediğim commit en son commitden(master) kaç commit gerideyse <code>HEAD~</code> yanına o rakamı koyuyoruz. Sistemi tekrar son haline geri döndürmek için ise <code>git checkout master</code> yazmamız yeterli.</p>

<h4>git clean</h4>

<p><code>git checkout</code> ile dosyalarda yapılan değişiklikleri geri alabiliyorduk. <code>git clean</code> ile ise yeni eklenen dosyaları silebiliyoruz.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git clean -fd <span class="c">#Bütün eklenen yeni dosyaları siler.</span>
</span><span class='line'>~/isy<span class="nv">$ </span>git clean new_file.txt <span class="c">#new_file adında yeni eklenen dosyayı siler.</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>git reset</h4>

<ul>
<li><p>Söz gelimi yaptığımız değişiklikleri <code>git add .</code> komutu ile izlemeye aldık ve hepsini izlemeden çıkarmak istiyoruz, o halde <code>git reset</code> komutunu kullanmamız gerekmektedir. İzlenen bütün dosyaları değil de sadece bazı dosyaları izlemeden çıkarmak için: <code>git reset HEAD file_name</code> komutu çalıştırılmalı.</p></li>
<li><p>Yapılan değişiklikler için commit mesajını yazdık ve github&#8217;a göndermeden commit mesajını değiştirmek istiyorsak şu komut çalıştırılmalı:</p></li>
</ul>


<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git reset <span class="p">&amp;</span>ndash<span class="p">;</span>soft HEAD~
</span></code></pre></td></tr></table></div></figure></p>

<p>Bu komut izlemeyi kaldırmayacaktır. <code>git commit -m ""</code> diyerek yeni commit mesajımızı girebiliriz.</p>

<ul>
<li>Github&#8217;a gönderdiğimiz son commiti geri almak için:</li>
</ul>


<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git reset <span class="o">(</span>kalmasını istediğin commit numarası ör:def668e<span class="o">)</span>
</span><span class='line'>git push -f
</span></code></pre></td></tr></table></div></figure></p>

<p>Bu komutu kullanırken dikkatli olmak gerek zira referans aldığınız commit numarasından önceki bütün commitleri silersiniz. Yani sistemi, referans aldığınız commit durumuna almış olursunuz ve ondan önceki bütün commitleri silersiniz. Silinen commitler ile yapılan değişiklikler sizin yerelinizde gözükür ve tek commit ile tekrar <code>push</code> edebilirsiniz. Çok gerekmediği takdirde birden fazla commiti geri alıp tek commit ile tekrar göndermek projenin gelişim aşaması için anlaşılmazlıklara sebebiyet verebilir. Bu sebeple ben genel itibariyle son attığım commiti değiştirmek için kullanıyorum bu komutu.</p>

<h4>git stash</h4>

<p>En sevdiğim kodlardan bir tanesi <img alt="sparkles" src="/images/emoji/unicode/2728.png" class="emoji" />. Kısacası yaptığımız değişiklikleri geçici olarak depolamamızı sağlar.</p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1471261268/stash_ewoovx.png" alt="" /></p>

<p>Şöyle bir senaryo düşünelim: Uygulamamızdaki bir çok dosyada değişiklik yaptık, yeni dosyalar ekledik vs. ve aniden bir iş çıktı, o işi yapıp biran önce commit etmemiz gerekti. İşte bu tarz durumlarda hangi dosyaları göndereceğinizi eliyip seçmek yerine <code>git stash</code> komutu ile önceden yaptığımız değişiklikleri kaydedip(artık <code>git status</code> ile gözükmeyecekler) acil yapmamız gereken işi yapıp commitleyip eski işimize tekrar dönebiliriz.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git stash
</span><span class='line'>Saved working directory and index state WIP on master: 898de0b Hava durumuna yeni açıklama ekle
</span><span class='line'>HEAD is now at 898de0b Hava durumuna yeni açıklama ekle
</span></code></pre></td></tr></table></div></figure></p>

<p>Acil durum düzenlemelerini yaptıktan sonra yedeklediğimiz diğer işimize şu şekilde dönüyoruz:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git stash pop
</span></code></pre></td></tr></table></div></figure></p>

<h4>.gitignore</h4>

<p>Yapılan değişikliklerin takip edilmesini istemediğimiz dosyaları/dosya yollarını <code>.gitignore</code>&lsquo;un içerisine ekliyoruz. Ancak <code>.gitignore</code>&#8216;a sonradan eklenen dosya yolları <code>git status</code> ile değişiklik yapılanlar arasında gösterilir. Bu durumu düzeltmek için şu yol izlenir:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git rm -r <span class="p">&amp;</span>ndash<span class="p">;</span>cached .
</span><span class='line'>~/isy<span class="nv">$ </span>git add .
</span><span class='line'>~/isy<span class="nv">$ </span>git commit -m <span class="p">&amp;</span>ldquo<span class="p">;</span>.gitignore artık düzgün çalışıyor<span class="p">&amp;</span>rdquo<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Bu komutların yaptığı şey tam olarak şöyle: Takibini yapmasını istemediğiniz dosyalar remote ettiğimiz yerdeki repo&#8217;da mevcut olduğu için o dosyaların silinmesini sağlar. O dosyaları sildikten sonra artık yaptığınız değişiklikler izlenmeyecek ve <code>git status</code> ile görüntülenmeyecektir.</p>

<p><code>Repo'daki dosyalar silinmesin ve yaptığım değişiklikler izlenmesin</code>&lsquo;i istiyorsak şu işimizi görecektir:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git update-index <span class="p">&amp;</span>ndash<span class="p">;</span>assume-unchanged FILE_NAME
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Komutları 1: git init, git remote, git clone, git status, git add/commit/push, git clean, git pull, git log]]></title>
    <link href="http://ecmelkytz.github.com/blog/2016/08/11/git-komutlari-1/"/>
    <updated>2016-08-11T10:39:24+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2016/08/11/git-komutlari-1</id>
    <content type="html"><![CDATA[<p>Bu konu ile ilgili bir çok doküman olmasına karşın kendi notlarımı yazmak istememle gelişen bir blog girdisidir.</p>

<p>Şunu da buraya koymazsam olmazdı <img alt="flushed" src="/images/emoji/unicode/1f633.png" class="emoji" />:</p>

<p><img class="center <a" src="href="http://res.cloudinary.com/dro8cemyf/image/upload/c_scale,h_290,w_250/v1471261671/gitinfo_nwaez7.png">http://res.cloudinary.com/dro8cemyf/image/upload/c_scale,h_290,w_250/v1471261671/gitinfo_nwaez7.png</a>&#8221;></p>

<h4>git init</h4>

<p>Git deposu oluşturacağımız dizinimizin içerisinde neler var bakalım:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>ls -a
</span><span class='line'>.  ..  examp-git-file1.md  examp-git-file2.md
</span></code></pre></td></tr></table></div></figure></p>

<p>Bu dizin içerisine git deposu oluşturmak için çalıştıracağımız komut: <code>git init</code>. Bu komut ile boş bir git deposunu initialize etmiş oluyoruz.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git init
</span><span class='line'>~/examp-git<span class="nv">$ </span>ls -a
</span><span class='line'><span class="o">=</span>&gt;.  ..  examp-git-file1.md  examp-git-file2.md  .git  //oluşan git dosyası
</span></code></pre></td></tr></table></div></figure></p>

<p>.git dosyasını terminalden değil de dizinin içinde görmek için <code>Ctrl + h</code> komutunu kullanmamız gerek.</p>

<!--more-->


<h4>git remote</h4>

<p>Git depomuzu yerelde oluşturduk. Peki internet üzerinde istediğimiz bir depoyla bağlantıyı nasıl sağlayacağız?
Bunun için github, bitbucket veya diğer git deposu için web hosting sağlayan servisleri kullanmamız gerekmektedir. Ben örnekleri github üzerinden göstereceğim.</p>

<p>Github&#8217;da yerelimdeki dizinle aynı isimde bir depo oluşturuyorum.</p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470901707/git1_dqsb5u.png" alt="" /></p>

<p><code>git@github.com:ecmelkytz/examp-git.git</code> depomuzu yönlendireceğimiz github&#8217;daki reponun url&#8217;i.</p>

<p>Depomuzu github reposuna yönlendirmek/bağlamak için:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git remote add origin git@github.com:ecmelkytz/examp-git.git
</span></code></pre></td></tr></table></div></figure></p>

<p><code>remote -v</code> komutu ile url&#8217;lerin doğru bir şekilde oluşup oluşmadığını kontrol edebiliriz.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git remote -v
</span><span class='line'>origin  git@github.com:ecmelkytz/examp-git.git <span class="o">(</span>fetch<span class="o">)</span>
</span><span class='line'>origin  git@github.com:ecmelkytz/examp-git.git <span class="o">(</span>push<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Eklediğimiz remote&#8217;un url&#8217;ini değiştirmek için:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git remote <span class="nb">set</span>-url origin git@github.com:USERNAME/OTHERREPOSITORY.git
</span></code></pre></td></tr></table></div></figure></p>

<h4>git clone</h4>

<p>Github&#8217;daki herhangi bir depoyu klonlamak için kullanılır. Bu sayede repo&#8217;daki bütün dosyaları yerelimize kopyalamış oluruz.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>git clone git@github.com:ecmelkytz/ionic-prayer-time.git
</span><span class='line'>~<span class="nv">$ </span><span class="nb">cd </span>ionic-prayer-time
</span><span class='line'>~<span class="nv">$ </span>ls -a
</span><span class='line'>.  ..  bower.json  .bowerrc  config.xml  .editorconfig  .git  .gitignore  gulpfile.js  hooks  ionic.project  package.json  README.md  resources  scss  www
</span></code></pre></td></tr></table></div></figure></p>

<h4>git status</h4>

<p>Depoda yaptığımız değişiklikleri gösterir.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git status
</span></code></pre></td></tr></table></div></figure></p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470907001/git-status_iv3jry.png" alt="" /></p>

<p><code>git status -s</code> ile çıktının kısa haline bakalım:</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git status -s
</span><span class='line'> M bower.json <span class="c">#Modified</span>
</span><span class='line'> D config.xml <span class="c">#Deleted</span>
</span><span class='line'>?? new-file.txt <span class="c">#Added</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>git add/commit/push</h4>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git add -A  <span class="c">#-A komutu bütün değişiklikleri eklememizi sağlar.</span>
</span><span class='line'>~/examp-git<span class="nv">$ </span>git commit -m <span class="p">&amp;</span>ldquo<span class="p">;</span>Some descriptions<span class="p">&amp;</span>rdquo<span class="p">;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Yapılan değişiklikle ilgili mesaj diğer grup elemanlarının kolay anlayabileceği bir şekilde oluşturulmalı.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;~/examp-git<span class="nv">$ </span>git push <span class="c">#Yapılan değişiklikler yazılan commit mesajı ile github deposuna gönderilir.</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>git clean</h4>

<p>Yeni eklenen dosyaları (izlenmeyen dosyalar/untracked) <code>git add</code> komutunu çalıştırmadan önce silmemizi sağlar.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/examp-git<span class="nv">$ </span>git clean -f -d new_file.txt
</span><span class='line'>~/examp-git<span class="nv">$ </span>git clean -f -d . <span class="c">#Yeni eklenen tüm dosyaları siler</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>git pull</h4>

<p>Bir projede birden fazla kişi ile çalışıyorsanız yapılan değişiklikleri kendi yerelinize çekmek için bu komutu fazlasıyla kullanacaksınız demektir. Kolları sıvayıp köklü bir değişiklik yapmadan önce sizden önce herhangi bir değişiklik yapılmış olma ihtimalina karşı <code>git pull</code> komutunu kullanın ve deponun son hali üzerinden kendi değişikliklerinizi yapmaya başlayın. Aksi takdirde olası aynı dosyalarda yapılan değişiklikler sayesinde <a href="https://help.github.com/articles/resolving-a-merge-conflict-from-the-command-line/">conflict</a> olabilirsiniz ve bana kalırsa bu işin en can sıkıcı yanı burasıdır.
Tam da şöyle hissedersiniz:</p>

<iframe src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470906693/git_cpkiww.gif" width="480" height="264" frameBorder="0" class="giphy-embed" allowFullScreen style="display: block;margin: 0 auto;margin-bottom:20px"></iframe>


<h4>git log</h4>

<p>Commit geçmişini görmemizi sağlar. Son committen önceki commitlere doğru sıralı şekilde çıktı verecektir.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/prayer<span class="nv">$ </span>git log
</span><span class='line'>commit 9bbd06c8b39221a5ca5b33b0c01e4ce72110309e
</span><span class='line'>Author: Ecmel Kaytazoğlu &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#105;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#101;&amp;#x63;&amp;#x6d;&amp;#x65;&amp;#108;&amp;#x2e;&amp;#107;&amp;#x79;&amp;#116;&amp;#122;&amp;#x40;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#46;&amp;#x63;&amp;#111;&amp;#109;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x65;&amp;#99;&amp;#109;&amp;#101;&amp;#x6c;&amp;#46;&amp;#107;&amp;#x79;&amp;#x74;&amp;#122;&amp;#64;&amp;#x67;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#x6d;&lt;/a&gt;</span>
</span><span class='line'>Date:   Wed Aug <span class="m">10</span> 16:44:05 <span class="m">2016</span> +0300&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;change to icons
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;commit a8ea41f801b5258bc759a8bf5901ecf7700f1459
</span><span class='line'>Author: Ecmel Kaytazoğlu &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#x69;&amp;#108;&amp;#116;&amp;#111;&amp;#x3a;&amp;#101;&amp;#x63;&amp;#x6d;&amp;#101;&amp;#108;&amp;#x2e;&amp;#x6b;&amp;#121;&amp;#x74;&amp;#x7a;&amp;#x40;&amp;#103;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#x6f;&amp;#x6d;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x65;&amp;#99;&amp;#109;&amp;#101;&amp;#108;&amp;#46;&amp;#107;&amp;#x79;&amp;#116;&amp;#122;&amp;#64;&amp;#x67;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#109;&lt;/a&gt;</span>
</span><span class='line'>Date:   Wed Aug <span class="m">10</span> 15:10:56 <span class="m">2016</span> +0300&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;config file changed
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;commit 4e0618a0ab1d52cc06c141839858bd7e46215b0f
</span><span class='line'>Author: Ecmel Kaytazoğlu &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#x65;&amp;#x63;&amp;#x6d;&amp;#x65;&amp;#108;&amp;#46;&amp;#x6b;&amp;#121;&amp;#116;&amp;#122;&amp;#64;&amp;#x67;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#109;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x65;&amp;#x63;&amp;#109;&amp;#101;&amp;#x6c;&amp;#46;&amp;#107;&amp;#121;&amp;#116;&amp;#x7a;&amp;#64;&amp;#x67;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&lt;/a&gt;</span>
</span><span class='line'>Date:   Wed Aug <span class="m">10</span> 15:05:58 <span class="m">2016</span> +0300
</span><span class='line'>:
</span></code></pre></td></tr></table></div></figure></p>

<p>Çıktının en son satırında <code>:</code> var ve yön tuşlarıyla aşağıya veya enter&#8217;a bastıkça önceki commitler gözükecektir. Commitlerde kelime aratmak için en son satırda <code>:</code> varken <code>/</code> tuşuna basıp istediğimiz kelimeyi yazabiliriz. Eğer aranan kelime birden fazla yerde geçiyorsa diğer kelimenin olduğu yere <code>n</code> tuşuna basarak gidebiliriz. <code>git log</code> komutunun terminal çıktısını sonlandırmak için <code>q</code> ya basmamız gerek. Bu arama işlemi için daha spesifik komutlar var. Bu nedenle <code>git log</code> komutunun alabileceği bazı parametrelere burada değinmek istiyorum.</p>

<p><code>git log --oneline</code> sadece commit id ve commit mesajını tek bir satırda gösterir.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/isy<span class="nv">$ </span>git log <span class="p">&amp;</span>ndash<span class="p">;</span>oneline
</span><span class='line'>9bbd06c change to icons
</span><span class='line'>a8ea41f config file changed
</span><span class='line'><span class="p">&amp;</span>hellip<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code>git log --graph</code> hangi branch ile commit yapıldığı ve nerede merge edildiği bilgilerini gösterir.</p>

<p><code>git log -p</code> commitlerle yapılan değişiklikleri gösterir. Hangi satırı sildiğin hangi satırı eklediğin vs.</p>

<p><code>git log --stat</code> commitlerdeki değişiklik olan dosyalarda kaç satırın eklendiğinin ve kaç satırın silindiğinin sayısını gösterir.</p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470916423/git-log-stat_pczax0.png" alt="" /></p>

<p>Bu parametreleri birlikte kullanmak mümkün. Söz gelimi commitlerde hangi branchların kullanıldığı bilgisini tek satırda göstermek istiyoruz. O halde <code>git log --oneline --graph</code> işimizi görecektir.</p>

<h5><code>git log</code> ile filtreleme işlemleri:</h5>

<p><code>git log -number</code></p>

<p>Son iki commite bakmak için: <code>git log -2</code></p>

<hr />

<p><code>git log --after=""</code></p>

<p>Sadece dün ve şuan arasındaki commitlere bakmak için: <code>git log --after="yesterday"</code></p>

<p>&ldquo;yesterday&rdquo; yerine &ldquo;30 minutes ago&rdquo;, &ldquo;last monday&rdquo;, &ldquo;last week&rdquo;, &ldquo;2 weeks ago&rdquo;, &ldquo;10-06-2016&rdquo;, &ldquo;10/06/2016&rdquo; vb. parametreler yazabiliriz.</p>

<hr />

<p><code>git log --after="" --before=""</code></p>

<p>Belirli tarih aralığındaki commitlere bakmak için: <code>git log --after="8/08/2016" --before="10/08/2016"</code> veya <code>git log --since="8/08/2016" --until="10/08/2016"</code></p>

<hr />

<p><code>git log --author=""</code> ve <code>git log -i</code></p>

<p>Sadece istediğimiz kişinin commitlerini görmek için:  <code>git log --author="ecmel"</code> Kişinin hem isminden hemde email&#8217;inden filtreleme yapılır. Ancak büyük-küçük harf ayrımı yapmadan aradığımızı bulmak için <code>-i</code>(ignore) parametresini kullanmamız gerek.  <code>git log -i --author="ecmel"</code></p>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1470981736/aouthor_a9bucu.png" alt="" /></p>

<p>Filter işleminde regular expression kullanımına da izin var. İstediğiniz bir kaç kişinin commitlerini görmek için: <code>git log --author="Ecmel\|Merve"</code></p>

<hr />

<p><code>git log --grep=""</code></p>

<p> Commit mesajındaki aradığımız bir kelimeye göre commitleri göstermek için: <code>git log --grep="change"</code> Yani commit mesajında &ldquo;change&rdquo; kelimesi geçen bütün commitler gösterilecektir.</p>

<hr />

<p><code>git log -p -S""</code></p>

<p><code>git log -p -S"strftime"</code> strftime kullanarak yaptığım bütün değişikliklerin commitlerini gösterir.
Bu filtreleme işleminde regular expression kullanabilmek için <code>-S</code> yerine <code>-G</code> kullanmamız gerek.
<code>git log -p -Gstrftime\|random</code> strftime ve random ile yaptığım değikliklerin commitlerini gösterir.</p>

<hr />

<p><code>git log file_name</code></p>

<p>Sadece istediğimiz dosya için yapılan commitleri görmek için: <code>git log README.md</code></p>

<p>Son olarak bir tane çoklu parametreli filter örneğini gösterip log ile ilgili yazmayı sonlandıralım.</p>

<p><code>git log -3 -i --author="merve" README.md</code> Merve kişisinin README.md dosyası ile ilgili attığı son 3 commit mesajı gösterilir.</p>
]]></content>
  </entry>
  
</feed>
