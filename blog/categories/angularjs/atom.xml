<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: angularjs | Ecmel Kaytazoğlu]]></title>
  <link href="http://ecmelkytz.github.com/blog/categories/angularjs/atom.xml" rel="self"/>
  <link href="http://ecmelkytz.github.com/"/>
  <updated>2016-11-11T13:57:53+02:00</updated>
  <id>http://ecmelkytz.github.com/</id>
  <author>
    <name><![CDATA[Ecmel Kaytazoğlu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails: AngularJS ile CRUD İşlemleri]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/09/19/rails-angularjs-ile-crud-islemleri/"/>
    <updated>2015-09-19T15:40:24+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/09/19/rails-angularjs-ile-crud-islemleri</id>
    <content type="html"><![CDATA[<p>Bu yazı Rails&#8217;de CRUD (Create, Read, Update, Delete) işlemlerinin AngularJS ile nasıl yapılabileceğini açıklamaktadır.</p>

<p>AngularJS&#8217;nin ngResource modülü kullanılmıştır. ngResurce modülü $resource servisi üzerinden RESTful servislerle etkileşimde bulunabilmeyi sağlar.</p>

<p>Book adında bir model oluşturalım, <code>angularjs-rails</code> gem&#8217;ini ekleyelim ve routes&#8217;u ayarlayalım.</p>

<p><figure class='code'><figcaption><span>Terminal </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="no">Book</span> <span class="n">title</span> <span class="ss">like</span><span class="p">:</span><span class="n">integer</span>
</span><span class='line'><span class="err">$</span> <span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>Gemfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">angularjs</span><span class="o">-</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>assets/javascripts/application.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">//= require angular</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>routes.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resources</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">defaults</span><span class="p">:</span> <span class="p">{</span><span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">}</span>
</span><span class='line'><span class="n">root</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">books</span><span class="c1">#index&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Gelelim işin Angular kısmına:</p>

<!--more-->


<p><strong>Hatırlatma:</strong> Herşeyden önce <a href="https://code.angularjs.org/1.3.9/angular-resource.js">angular-resource.js</a> dosyasını projemize eklemeliyiz. İster cdn olarak isterseniz de assets dizinine ekleyebilirsiniz.</p>

<p><figure class='code'><figcaption><span>layouts/application.html.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= javascript_include_tag &amp;ldquo;&lt;a href=</span><span class="s2">&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.3.9/angular-resource.min.js&quot;</span><span class="o">&gt;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">ajax</span><span class="o">.</span><span class="n">googleapis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">ajax</span><span class="o">/</span><span class="n">libs</span><span class="o">/</span><span class="n">angularjs</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">9</span><span class="o">/</span><span class="n">angular</span><span class="o">-</span><span class="n">resource</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">js</span><span class="o">&lt;</span><span class="sr">/a&gt;&amp;rdquo; %&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>javascripts/angular/app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">bookApp</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">ngResource</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code>bookApp</code> adında bir module tanımladık ve ngResource modülünü dependency olarak belirttik.</p>

<p>Angular uygulaması başlaması için <code>ng-app</code> directive&#8217;ini layout&#8217;a ekleyelim.</p>

<p><figure class='code'><figcaption><span>views/layout/index.html.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;html</span> <span class="na">ng-app=</span><span class="s">&quot;bookApp&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="ni">&amp;hellip;</span>
</span><span class='line'>  <span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Şimdi de Book verileri üzerinde crud işlemleri yapabilmek için Angularjs&#8217;in servis oluşturma komponentlerinden biri olan factory ile bir servis oluşturalım.</p>

<p><figure class='code'><figcaption><span>javascripts/angular/app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Book</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$resource</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">$resource</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="sr">/books/</span><span class="o">:</span><span class="nx">id</span><span class="p">.</span><span class="nx">json</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="err">@</span><span class="nx">id</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>      <span class="p">{</span>
</span><span class='line'>        <span class="nx">create</span><span class="o">:</span>  <span class="p">{</span> <span class="nx">method</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">POST</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>        <span class="nx">index</span><span class="o">:</span>   <span class="p">{</span> <span class="nx">method</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">GET</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="nx">isArray</span><span class="o">:</span> <span class="kc">true</span> <span class="p">},</span>
</span><span class='line'>        <span class="nx">get</span><span class="o">:</span>    <span class="p">{</span> <span class="nx">method</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">GET</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="nx">isArray</span><span class="o">:</span> <span class="kc">false</span> <span class="p">},</span>
</span><span class='line'>        <span class="nx">update</span><span class="o">:</span>  <span class="p">{</span> <span class="nx">method</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">PUT</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>        <span class="nx">destroy</span><span class="o">:</span> <span class="p">{</span> <span class="nx">method</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">DELETE</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code>Book</code> adında bir servis oluşturduk. Bu servisi kullanacağımız controller&#8217;a dependency olarak aşağıdaki gibi belirteceğiz.</p>

<p><figure class='code'><figcaption><span>javascripts/angular/controllers.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">BookCtrl</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Book</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">Book</span><span class="p">)]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Yukarıdaki kodun açılımı şudur: <code>bookApp</code> modülüne (app) <code>BookCtrl</code> adında bir controller tanımladık ve bu controller&#8217;a oluşturduğumuz <code>Book</code> servisini dependency olarak belirttik. Yani servisimizde tanımladığımız fonksiyonları bu controller içerisinde artık kullanabileceğiz.</p>

<p>Oluşturduğumuz controller&#8217;ı hangi directive kapsamında çalışmasını istiyorsak orada tanımlıyoruz. İster <code>body</code>&lsquo;de tanımlayın, isterseniz kapsamını azaltmak için başka bir directive&#8217;e tanımlayın. Ben bu örnekte ilgili sayfanın index&#8217;ine tanımlayacağım.</p>

<p><figure class='code'><figcaption><span>views/books/index.html.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;row&quot;</span> <span class="na">ng-controller=</span><span class="s">&quot;BookCtrl&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-md-6 col-md-offset-3&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;center&gt;&lt;h1&gt;</span>Books<span class="nt">&lt;/h1&gt;&lt;/center&gt;</span>
</span><span class='line'>    <span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">&quot;form-horizontal&quot;</span> <span class="na">ng-submit=</span><span class="s">&quot;addBook()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;input-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;book_title&quot;</span> <span class="na">required</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;input-group-btn&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">class=</span><span class="s">&quot;btn btn-default&quot;</span> <span class="na">value=</span><span class="s">&quot;Ekle&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/span&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/form&gt;</span>
</span><span class='line'>        <span class="nt">&lt;table</span> <span class="na">class=</span><span class="s">&quot;table table-striped table-condensed&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;thead&gt;</span>
</span><span class='line'>            <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>              <span class="nt">&lt;th&gt;</span>Başlık<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>              <span class="nt">&lt;th&gt;</span>Like<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">&quot;2&quot;</span><span class="nt">&gt;</span>İşlemler<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/thead&gt;</span>
</span><span class='line'>          <span class="nt">&lt;tbody&gt;</span>
</span><span class='line'>              <span class="nt">&lt;tr</span> <span class="na">ng-repeat=</span><span class="s">&quot;book in books&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span><span class="err">&lt;</span>%= link_to &quot;&quot;, book_path(&quot;&quot;) %&gt;<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span>
</span><span class='line'>            <span class="err">&lt;</span>%= link_to &quot;Like&quot;, &#39;&#39;, &#39;ng-click&#39; =&gt; <span class="ni">&amp;#8220;</span>likeBook($index)<span class="ni">&amp;#8221;</span>, value:<span class="ni">&amp;#8221;</span>like<span class="ni">&amp;#8221;</span>, class:<span class="ni">&amp;#8221;</span>btn btn-success btn-xs<span class="ni">&amp;#8221;</span> %&gt;
</span><span class='line'>            <span class="err">&lt;</span>%= link_to &quot;Dislike&quot;, &#39;&#39;, &#39;ng-click&#39; =&gt; <span class="ni">&amp;#8220;</span>dislikeBook($index)<span class="ni">&amp;#8221;</span>, value:<span class="ni">&amp;#8221;</span>dislike<span class="ni">&amp;#8221;</span>, class:<span class="ni">&amp;#8221;</span>btn btn-danger btn-xs<span class="ni">&amp;#8221;</span> %&gt;
</span><span class='line'>            <span class="err">&lt;</span>%= link_to &quot;Remove&quot;, &#39;&#39;,&#39;ng-click&#39; =&gt; <span class="ni">&amp;#8220;</span>deleteBook($index)<span class="ni">&amp;#8221;</span>, value:<span class="ni">&amp;#8221;</span>remove<span class="ni">&amp;#8221;</span>, class:<span class="ni">&amp;#8221;</span>btn btn-warning btn-xs<span class="ni">&amp;#8221;</span> %&gt;
</span><span class='line'>          <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/tbody&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/table&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Görüldüğü gibi <code>BookCtrl</code> controller en baştaki tag&#8217;da tanımlı ve ben bu tag&#8217;lar arasında controller içerisinde tanımladığım bütün fonksiyonları kullanabileceğim.</p>

<h4>Read İşlemi</h4>

<p>Tanımlı book nesnelerini elde etmek için <code>Book</code> servisimizdeki <em>index</em> metodundan yararlanacağız.</p>

<p><figure class='code'><figcaption><span>javascripts/angular/controllers.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">BookCtrl</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Book</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">Book</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">books</span> <span class="o">=</span> <span class="nx">Book</span><span class="p">.</span><span class="nx">index</span><span class="p">();</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>Create İşlemi</h4>

<p>İndex sayfası içerisindeki <code>ng-submit="addBook()"</code> ve <code>ng-model="book_title"</code> yeni bir book nesnesi oluşturmakta bize yardımcı olacak.
İnput&#8217;a tanımlanan ng-model&#8217;in <code>book_title</code> değişkeni $scope&#8217;a bağlanacaktır. Submit ederken <code>addBook()</code> fonksiyonu çalışacaktır. Şimdi bu fonksiyonu controller&#8217;ımıza tanımlayalım.</p>

<p><figure class='code'><figcaption><span>javascripts/angular/controllers.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">BookCtrl</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Book</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">Book</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">addBook</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">attr</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>    <span class="nx">attr</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">book_title</span><span class="p">;</span> <span class="c1">// ng-model&amp;#8217;deki veri</span>
</span><span class='line'>    <span class="nx">attr</span><span class="p">.</span><span class="nx">like</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// Yeni oluşturulan verinin like değeri</span>
</span><span class='line'>    <span class="nx">newBook</span> <span class="o">=</span> <span class="nx">Book</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">attr</span><span class="p">);</span> <span class="c1">// Create işlemi burada</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">books</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">newBook</span><span class="p">);</span> <span class="c1">// View kısmını refresh etmeden verileri göstermek için books değişkenine veriyi ekliyoruz</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">book_title</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;;</span> <span class="c1">// Nesneyi ekledikten sonra input&amp;#8217;taki veriyi siler</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>Update İşlemi</h4>

<p>Güncelleme işlemi için kullanılacak satır:</p>

<p><figure class='code'><figcaption><span>views/books/index.html.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= link_to &amp;ldquo;Like&amp;rdquo;, &amp;lsquo;&amp;rsquo;, &amp;lsquo;ng-click&amp;rsquo; =</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">likeBook</span><span class="p">(</span><span class="vg">$index</span><span class="p">)</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">value</span><span class="p">:</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">like</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">class</span><span class="p">:</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">btn</span> <span class="n">btn</span><span class="o">-</span><span class="n">success</span> <span class="n">btn</span><span class="o">-</span><span class="n">xs</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Butona basılınca <code>likeBook()</code> fonksiyonu çalışacak. O halde <code>likeBook()</code> fonksiyonunu tanımlayalım.
<figure class='code'><figcaption><span>javascripts/angular/controllers.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">BookCtrl</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Book</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">Book</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">likeBook</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">book</span> <span class="o">=</span><span class="nx">$scope</span><span class="p">.</span><span class="nx">books</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
</span><span class='line'>    <span class="nx">book</span><span class="p">.</span><span class="nx">like</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">Book</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">book</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nx">like</span><span class="o">:</span> <span class="nx">book</span><span class="p">.</span><span class="nx">like</span><span class="p">});</span> <span class="c1">// Update işlemi burada</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>Delete İşlemi</h4>

<p>Silme işlemi için kullanılacak satır:
<figure class='code'><figcaption><span>views/books/index.html.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= link_to &amp;ldquo;Remove&amp;rdquo;, &amp;lsquo;&amp;rsquo;,&amp;lsquo;ng-click&amp;rsquo; =</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">deleteBook</span><span class="p">(</span><span class="vg">$index</span><span class="p">)</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">value</span><span class="p">:</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">remove</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">class</span><span class="p">:</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">btn</span> <span class="n">btn</span><span class="o">-</span><span class="n">warning</span> <span class="n">btn</span><span class="o">-</span><span class="n">xs</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code>deleteBook()</code> fonksiyonunu tanımlayalım.</p>

<p><figure class='code'><figcaption><span>javascripts/angular/controllers.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">BookCtrl</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$scope</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Book</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">Book</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">deleteBook</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">book</span> <span class="o">=</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">books</span><span class="p">[</span><span class="nx">index</span><span class="p">];</span>
</span><span class='line'>    <span class="nx">Book</span><span class="p">.</span><span class="nx">destroy</span><span class="p">(</span><span class="nx">book</span><span class="p">);</span> <span class="c1">// Delete işlemi burada</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">books</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>  <span class="c1">// View kısmını güncellemek için belirtilen indexten itibaren 1 nesne siler.</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>422 (Unprocessable Entity) hatasından kurtulmak için:</h4>

<p><figure class='code'><figcaption><span>controllers/application_controller.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">skip_before_action</span> <span class="ss">:verify_authenticity_token</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="ss">:json_request?</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;protected&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">json_request?</span>
</span><span class='line'>  <span class="n">request</span><span class="o">.</span><span class="n">format</span><span class="o">.</span><span class="n">json?</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<p style="text-align:center;"><strong>TL;DR</strong></p>

<p>Look at the my github repo => <a href="https://github.com/ecmelkytz/rails-angular-resource">https://github.com/ecmelkytz/rails-angular-resource</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails-AngularJS (Unknown provider: tProvider) Hatası]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/09/12/rails-angularjs-unknown-provider-tprovider-hatasi/"/>
    <updated>2015-09-12T23:49:27+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/09/12/rails-angularjs-unknown-provider-tprovider-hatasi</id>
    <content type="html"><![CDATA[<p>Zamanında bu hata ile karşılaştığımda çözümü bulana kadar projede ilerlememi durdurduğu için kendi adıma buraya not etmekte fayda görüyorum.</p>

<p>Diyelimki Rails ile yazdığınız bir projede Angularjs kullandınız. Uygulamanız local&#8217;de sıkıntısız bir şekilde çalışıyor. Gelin görün ki production ortamında assets ile alakalı bir hata ile karşılaştınız.
Doğal olarak aşağıdaki kodu çalıştıracaksınız:</p>

<pre><code class="Ruby">RAILS_ENV=production rake assets:precompile
</code></pre>

<p>Ancak console&#8217;da aldığınız hata  <code>Error: Unknown provider: tProvider</code> ise precompile işlemi ile sorun çözülmeyecektir.</p>

<h4>Çözüm:</h4>

<p><code>/config/environments/production.rb</code>&lsquo;e aşağıdaki kodu eklemelisiniz.</p>

<pre><code class="ruby">config.assets.js_compressor = Uglifier.new(mangle: false)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Two Way Binding - One Time Binding]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/28/angularjs-two-way-binding-one-time-binding/"/>
    <updated>2015-08-28T23:31:15+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/28/angularjs-two-way-binding-one-time-binding</id>
    <content type="html"><![CDATA[<p><img class="center <a" src="href="https://docs.angularjs.org/img/guide/concepts-databinding1.png">https://docs.angularjs.org/img/guide/concepts-databinding1.png</a>&#8221;></p>

<p>Two way binding (Çift yönlü veri bağlama) modeldeki değişiklikleri view&#8217;e, view&#8217;deki değişiklikleri modele aktarma işlemidir. Daha önceki <a href="http://ecmelkytz.github.io/blog/2015/08/11/angularjs-calisma-mantigi/">yazımda</a> two way binding ve doğal olarak digest cycle&#8217;dan uzun uzadıya bahsetmiştim.</p>

<p>Two way binding, kullanıcı etkileşimlerinin direk view kısmına aktarılması kısmında çok güzel bir işleve sahip olsa da; digest cycle tetiklendikten sonra en az 2, maksimum 10 kez çalıştığı düşünülürse performans anlamında büyük sorunlar oluşturacaktır. Şöyle ki; benim data binding sayım arttığı ölçüde $digest loop&#8217;un sayısı da artacaktır. Kullanıcı etkileşiminin yoğun olduğu bir sayfada performans anlamında yaşanabilecek sıkıntılar elbette ki kaçınılmaz olacaktır.</p>

<p>Hal böyle olunca Angularjs geliştiricileri Angular 1.3 versiyonu ile data binding&#8217;den kaynaklanan performans sorunlarını gidermek adına one-time binding&#8217;i tanıttılar. One time binding view-model güncelleme işlemini bir kez yapıyor, bundan sonra yapılan etkileşimler herhangi bir şekilde view&#8217;e ya da modele yansıtılmıyor. Yani digest cycle bir kez kullanıcı etkileşimlerini dinliyor ve bu sayede güncelleme bir kez yapılmış oluyor.</p>

<!--more-->


<h3>One-time binding nasıl çalışır görelim:</h3>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1449581533/one-time-binding_eaj5td.gif" alt="" /></p>

<p>Yukarıdaki gif&#8217;den de anlaşılacağı üzere model&#8217;de yazdığım yazının ilk karakteri view&#8217;e bağlanıyor. Ondan sonraki etkileşimlerde hiçbir şekilde veri bağlama yapılmıyor.</p>

<h4>Syntax farkına bakalım:</h4>

<p>Two way binding
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;p&gt;</span> {{ name }} <span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>One time binding
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  <span class="nt">&lt;p&gt;</span> {{ ::name }} <span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Single Page Application]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/15/angularjs-single-page-application/"/>
    <updated>2015-08-15T23:04:08+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/15/angularjs-single-page-application</id>
    <content type="html"><![CDATA[<p>Single page application (SPA), tek bir sayfada sunulan uygulamaların genel adıdır. SPA ile sayfa içinde gezinebilmemiz onu ayrı sayfalara bölmez.</p>

<p>Angularjs ile bir single page application nasıl oluşturuluyor. Angular bunun için nasıl bir route mekanizması kullanıyor ona bakalım.</p>

<p><figure class='code'><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">myApp</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">[</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">ngRoute</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;]);</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">app</span><span class="p">.</span><span class="nx">config</span><span class="p">([</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">$routeProvider</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$routeProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$routeProvider</span><span class="p">.</span>
</span><span class='line'>    <span class="nx">when</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="err">/home&amp;rdquo;, {</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">home</span><span class="p">.</span><span class="nx">html</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}).</span>
</span><span class='line'>    <span class="nx">when</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="err">/services&amp;rdquo;, {</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">services</span><span class="p">.</span><span class="nx">html</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}).</span>
</span><span class='line'>    <span class="nx">when</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="err">/clients&amp;rdquo;, {</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">clients</span><span class="p">.</span><span class="nx">html</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}).</span>
</span><span class='line'>    <span class="nx">otherwise</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">redirectTo</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="err">/home&amp;rsquo;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Uygulamamızın modul&#8217;une ngRoute modul&#8217;unu dependency olarak belirtiyoruz. Yani modulun bağımlılıklarını belirtiyoruz. Bu sayede ngRoute içindeki her fonksiyonu/servisi kendi uygulamamızda da kullanabiliyoruz.</p>

<!--more-->


<p>Config sadece Provider&#8217;lar için kullanılır. Provider&#8217;lar Angularjs&#8217;de en gelişmiş servis oluşturma kompanentidir. Buradaki <code>$routeProvider</code> servisi uygulama başlamadan Routing konfigürasyonunu sağlar.</p>

<p><code>$routeProvider</code> sayesinde eğer url isteği /home olursa template olarak <code>home.html</code> kullanılmasını, eğer istek /services olursa template olarak <code>services.html</code> kullanılmasını sağlıyoruz. <code>.otherwise</code> ise olmayan herhangi farklı bir istekte bulunulursa /home url&#8217;e yönlendirmek için kullanılmaktadır.</p>

<p><figure class='code'><figcaption><span>services.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>Services Page<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>Nobody can give you freedom. If you<span class="ni">&amp;#8217;</span>re a man, you take it.<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Angular route yapısı için daha çok <a href="https://github.com/angular-ui/ui-router">ui-router</a> kullanılması tavsiye edilir.</p>

<p><figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html</span> <span class="na">ng-app=</span><span class="s">&quot;myApp&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;style.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://code.angularjs.org/1.3.9/angular.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://code.angularjs.org/1.3.9/angular-route.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;script.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#/home&quot;</span><span class="nt">&gt;</span>Home<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#/services&quot;</span><span class="nt">&gt;</span>Services<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
</span><span class='line'>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;#/clients&quot;</span><span class="nt">&gt;</span>Clients<span class="nt">&lt;/a&gt;&lt;/li&gt;&lt;br&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/ul&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">ng-view</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Angularjs route yapısında <code>#</code> karakteri kullanılır. O yüzden linklerdeki url&#8217;lerde <code>#</code> karakteri kullanılmıştır. <code>ng-view</code> aslında Rails&#8217;de ki <code>yield</code> ile aynı işlevi görür. Angularda eğer bunu eklemezsek sayfada görüntü oluşmayacaktır.</p>

<p>Single Page Application örneğinin <a href="http://plnkr.co/edit/BrCnZCuCuT2b7ZdkTju1?p=preview">plunker adresi</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS Çalışma Mantığı]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/08/11/angularjs-calisma-mantigi/"/>
    <updated>2015-08-11T00:26:37+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/08/11/angularjs-calisma-mantigi</id>
    <content type="html"><![CDATA[<p>Angularjs ile ilgili beni en çok uğraştıran konu kesinlikle angularjs&#8217;in çalışma mantığını anlatmak olacak. Çünkü Angularjs ng-app directive&#8217;i gibi basit bir söz dizilimi ile çalışmaya başlayıp, mekanizmayı tam anlamıyla anlamak için içerisine dallandıkça <strong>digest cycle</strong>,  <strong>$watch list</strong>, <strong>two way binding</strong>, <strong>dirty cheking</strong> mekanizmasının birbiri ile alakasının anlatılması gereken bir konu haline geliyor.</p>

<p>Eğer bir Angularjs uygulaması oluşturmak istiyorsanız elbetteki ilk yapacağınız iş anguların kütüphanesini projenize eklemek olacaktır. Angularjs&#8217;nin sayfanın başına veya sonuna eklenmesinin bir önemi yok çünkü Angularjs uygulaması DomReady olmadan yani tüm scriptler yüklenmeden boot etmiyor.</p>

<p>Angularjs uygulamasını başlatmak için <code>ng-app</code> yapısal directive ihtiyacımız vardır. Angularjs yüklendikten sonra uygulamanın başlaması için aranan ilk directive <code>ng-app</code>&lsquo;dir. <code>ng-app</code>&#8216;ın bulunduğu etiketin sarmaladığı alanlar arasında Angular uygulaması başlar.</p>

<pre><code class="html">&lt;!DOCTYPE html&gt;
&lt;html ng-app&gt;
  &lt;head&gt;
    &lt;script src="https://code.angularjs.org/1.3.9/angular.js"&gt;&lt;/script&gt;
  &lt;/head&gt;
&lt;body&gt;&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>Yukarıdaki kodda <code>ng-app</code> html etiketine eklendiği için bu taglar arasında kalan yer Angularjs uygulaması olarak çalışacaktır. <code>ng-app</code> direktive&#8217;i aynı zamanda uygulamanın global scope&#8217;u olan <code>$rootScope</code> nesnesini oluşturmaktadır.
Yeri gelmişkende belirteyim,  <code>ng-app</code>&lsquo;in kullanımı W3C standartlarına uymadığı için <code>data-ng-app</code> kullanımı tavsiye edilmektedir.</p>

<p><code>ng-app</code> directive&#8217;inden sonra sayfa içerisindeki diğer directiveler aranmaya başlanır. Bulunan direktiveler uygulamaya bind edilir.  Bind edilenler <code>$wacth list</code>&lsquo;e eklenir. Daha sonrasında digest cycle kullanıcı etkileşimlerini dinlemeye başlar.</p>

<!--more-->


<h4>Digest Cycle</h4>

<p>Digest Cycle uygulamanın view katmanını yani kullanıcının gördüğü ekrandaki verileri güncel tutmakla görevlidir. Kullanıcı tarafından yapılan en ufak bir etkileşimde view&#8217;in otomatik güncellenmesini sağlar.</p>

<p>Özetle; Digest Cycle kullanıcı etkileşimlerini dinliyor, bir değişiklik var ise view kısmını güncel tutuyor vs. tamam ama bunun sağlanmasında arkada nasıl bir mekanizma çalışıyor asıl buna değinmek ve biraz daha derine inmek istiyorum. Bu olayı two way binding üzerinden anlatacağım.</p>

<h4>Two Way Binding denilen şey ne, nasıl işler?</h4>

<p><img src="http://res.cloudinary.com/dro8cemyf/image/upload/v1449136639/desktop-animation2_av1hak.gif" alt="" /></p>

<p>Yukarıdaki gif görsel olarak two way binding dediğimiz şeydir. Görüldüğü üzere model içerisinde yaptığım her değişiklik bind ettiğim view kısmına anında aktarılıyor. <a href="http://plnkr.co/edit/ayo5ZxwxmKeptLTSxElu?p=preview">Plunker Code</a></p>

<p><figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;body</span> <span class="na">ng-app</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;name&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h1&gt;</span> Merhaba {{ name }} <span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>{{ }} işareti angular&#8217;da expression olarak adlandırılır ve scope nesnesini view&#8217;e bind (bağlamaya) etmeye yarar.</p>

<p>Şimdi elimizde bir <code>$watch list</code>  adında bir listemizin olduğunu hayal edelim. Biz UI&#8217;ye her bind ettiklerimizi bu <code>$watch list</code>&lsquo;e  <code>$watch</code> nesnesi olarak eklediğimizi düşünelim. Digest cycle kullanıcı etkileşimlerini dinlerken her defasında bu  <code>$watch list</code>&#8216;e bakar.  Eğer bu <code>$watch</code>&#8216;lardan birinde herhangi bir değişiklik var ise model-view senkronizasyonunu sağlar (Two way binding&#8217;de olduğu gibi). Bu senkronizasyonu dirty cheking mekanizması ile yapar.</p>

<p><strong>Dirty Cheking Mekanizmasi:</strong> Bir değerin eski değeri ile yeni değerinin karşılaştırılmasıdır.</p>

<p><strong>$watch list oluşturma örneği 1:</strong></p>

<p><figure class='code'><figcaption><span>controller.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">MainController</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">foo</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Foo</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;;</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">bar</span> <span class="o">=</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Bar</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  Hello {{ bar }}
</span></code></pre></td></tr></table></div></figure></p>

<p>Yukarıdaki örnekte html sayfasında ekran çıktısı olarak “Hello Bar” yazısı gözükecektir. Çünkü {{ bar }} expression&#8217;ı scope nesnesini view&#8217;e bind edecek. Controller içinde scope&#8217;a tanımlanmış bir de foo değişkeni var ancak o view&#8217;e bind edilmemiş durumda. İşte bu yüzden <code>$watch list</code>&lsquo;e sadece 1 tane $watch nesnesi eklenecek. Digest cycle ile de sadece <code>$scope.bar</code> üzerindeki değişiklikler dinlenecek ve view&#8217;e aktarılacak.</p>

<p><strong>$watch list oluşturma örneği 2:</strong></p>

<p><figure class='code'><figcaption><span>index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>  Name: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;name&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  Password: <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;password&quot;</span> <span class="na">ng-model=</span><span class="s">&quot;password&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><code>ng-model</code> directivenin özelliklerinden birisi input nesnesini scope’a bağlamaktır. Yani $scope.name ve $scope.password&#8217;un ikiside bind edildiği için <code>$watch list</code>&lsquo;e 2 tane $watch nesnesi eklenecek ve digest cycle bu iki inputtaki değişiklikleri dinleyecek.</p>

<p><strong>Ufak bilgi:</strong> Digest çevirimi tetiklendikten sonra minimum 2 maximum 10 kez çalışır. (Angular 1.4’de 20 kez)</p>

<p><strong>Digest Loop <code>$watch list</code> gezerken nasıl bir senaryo izliyor biraz daha bakalım:</strong></p>

<blockquote><ul>
<li>Hey $watch, senin değerin ne?

<ul>
<li>9</li>
</ul>
</li>
<li>Pekala, bir değişiklik var mı? (Dirty Checking)

<ul>
<li>Hayır yok.</li>
</ul>
</li>
</ul>


<p>(Herhangi bir değişiklik olmadığı için diğer $watch’a geçer.)</p>

<ul>
<li>Hey sen, senin değerin ne?

<ul>
<li>Foo</li>
</ul>
</li>
<li>Bir değişiklik var mı?  (Dirty Checking)

<ul>
<li>Evet, önceden Bar’dım.</li>
</ul>
</li>
<li>Güzel, o halde DOM’u güncelleyelim.</li>
</ul>
</blockquote>

<p><code>$watch</code>’lar bitene kadar bu çevirim devam eder. $digest loop bittiğinde değişiklik var ise DOM&#8217;da değişiklik yapılır.</p>

<p>Uzun uzadıya elimden geldiğince anlatmaya çalıştım.</p>

<p>O halde şu söz de burada dursun:</p>

<blockquote><p>“Ne kadar bilirsen bil, anlattıkların karşındakinin anlayabildiği kadardır.”</p></blockquote>

<p>Velhasıl-ı kelam faydalı olması dileğiyle&hellip;</p>
]]></content>
  </entry>
  
</feed>
