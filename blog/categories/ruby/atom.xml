<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | Ecmel Kaytazoğlu]]></title>
  <link href="http://ecmelkytz.github.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://ecmelkytz.github.com/"/>
  <updated>2016-03-16T10:45:52+02:00</updated>
  <id>http://ecmelkytz.github.com/</id>
  <author>
    <name><![CDATA[Ecmel Kaytazoğlu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby: attr_accessor Kullanımı]]></title>
    <link href="http://ecmelkytz.github.com/blog/2015/07/03/ruby-attr-accessor-kullanimi/"/>
    <updated>2015-07-03T15:45:44+03:00</updated>
    <id>http://ecmelkytz.github.com/blog/2015/07/03/ruby-attr-accessor-kullanimi</id>
    <content type="html"><![CDATA[<p>Person adında bir sınıfımızın olduğunu farzedelim:</p>

<pre><code class="Ruby">class Person
end

person = Person.new # =&gt; NoMethodError: undefined method 'name'
</code></pre>

<p><code>name</code> adında bir metot tanımlamadığımız sürece yukarıdaki gibi hata alacağız.</p>

<p>O halde metodumuzu tanımlayalım:</p>

<pre><code class="Ruby">class Person
  def name
    @name #  instance variable
  end
end

person = Person.new
person.name # =&gt; nil
person.name = "Ecmel" # =&gt; NoMethodError: undefined method `name='
</code></pre>

<p><code>name</code> metodunu tanımladık ancak görüldüğü gibi sadece okuma yapabiliyoruz, herhangi bir değer atayamıyoruz.</p>

<p>İşte bu iki işlemden biri reader (değişkenin değerine erişilmesi) diğeri ise writer (değişkenin değerinin değiştirilmesi) olarak adlandırılır.</p>

<p>Yukarıda writer metodu oluşturmamıştık şimdi onu da oluşturalım:</p>

<pre><code class="Ruby">class Person
  def name # reader
    @name
  end

  def name=(str) # writer
    @name = str
  end
end

person = Person.new
person.name = "Ecmel"
person.name # =&gt; "Ecmel"
</code></pre>

<p>Artık reader ve writer metodları kullanarak örnek değişkenin (@name) değerine erişip onu değiştirebiliriz.
Peki her seferinde bu metodları bu şekilde tanımlayacak mıyız?</p>

<p><strong>Bu işin kolayına bakalım:</strong></p>

<p>Yukarıdaki gibi iki ayrı fonksiyon tanımlamaya gerek yok.</p>

<pre><code class="Ruby">class Person
  attr_reader :name
  attr_writer :name
end
</code></pre>

<p><strong>Daha kolayına bakalım:</strong></p>

<p>Hem reader hem de writer metodlarının işlevselliğine sahip bir metot:  <code>attr_accessor</code></p>

<pre><code class="Ruby">class Person
  attr_accessor :name
end

person = Person.new
person.name = "Ecmel"
person.name # =&gt; "Ecmel"
</code></pre>

<p> <code>attr_accessor :name</code>  reader ve writer metodlarını oluşturmanın yanı sıra bir de @name (instance variable/örnek değişken) oluşturur.</p>

<p>İnstance variable&#8217;ı kullanalım:</p>

<pre><code class="Ruby">class Person
  attr_accessor :name

  def say_hello
    "Hello #{@name}"
  end
end

person = Person.new
person.name = "Ecmel"
person.say_hello # =&gt; "Hello Ecmel"
</code></pre>

<p>Finally</p>

<p><img class="center <a" src="href="http://res.cloudinary.com/dro8cemyf/image/upload/c_scale,h_280,w_346/v1457011914/thatsit.png_m778zf.jpg">http://res.cloudinary.com/dro8cemyf/image/upload/c_scale,h_280,w_346/v1457011914/thatsit.png_m778zf.jpg</a>&#8221;></p>
]]></content>
  </entry>
  
</feed>
